{"version":3,"file":"bundle.manifests-CTEt9jeT.js","sources":["../../../Client/src/entrypoints/manifest.ts","../../../Client/src/modals/manifest.ts","../../../Client/src/modals/modal-token.ts","../../../Client/node_modules/@hey-api/client-fetch/dist/index.js","../../../Client/src/impersonation-api/client.gen.ts","../../../Client/src/impersonation-api/sdk.gen.ts","../../../Client/src/entityactions/member.entity.action.ts","../../../Client/src/constants/member-section-condition.ts","../../../Client/src/entityactions/manifest.ts","../../../Client/src/management-api/client.gen.ts","../../../Client/src/management-api/sdk.gen.ts","../../../Client/src/context/root-context.ts","../../../Client/src/context/manifest.ts","../../../Client/src/conditions/sensitiveData-condition.ts","../../../Client/src/conditions/manifest.ts","../../../Client/src/bundle.manifests.ts"],"sourcesContent":["const context: UmbExtensionManifest =\n  {\n    name: \"Impersonation Entrypoint\",\n    alias: \"Impersonation.Entrypoint\",\n    type: \"backofficeEntryPoint\",\n    js: () => import(\"./entrypoint.js\"),\n  };\n\nexport const manifests = [context];\n","const modals = [\n  {\n    type: 'modal',\n    alias: 'member.impersonation.modal',\n    name: 'Member custom modal',\n    js: () => import('./modal-element.js')\n  }\n];\n\nexport const manifests = [...modals];\n","import {UmbModalToken} from \"@umbraco-cms/backoffice/modal\";\n\nexport interface MemberImpersonationModalData {\n  headline: string;\n  content: string;\n}\n\nexport interface MemberImpersonationModalValue {\n  content: string,\n  page?: string\n}\n\nexport const MEMBER_IMPERSONATION_MODAL = new UmbModalToken<MemberImpersonationModalData, MemberImpersonationModalValue>(\n  \"member.impersonation.modal\",\n  {\n    modal: {\n      type: 'sidebar',\n      size: 'medium'\n    }\n  }\n);\n","var j=async(t,r)=>{let e=typeof r==\"function\"?await r(t):r;if(e)return t.scheme===\"bearer\"?`Bearer ${e}`:t.scheme===\"basic\"?`Basic ${btoa(e)}`:e},z=(t,r,e)=>{typeof e==\"string\"||e instanceof Blob?t.append(r,e):t.append(r,JSON.stringify(e));},I=(t,r,e)=>{typeof e==\"string\"?t.append(r,e):t.append(r,JSON.stringify(e));},k={bodySerializer:t=>{let r=new FormData;return Object.entries(t).forEach(([e,i])=>{i!=null&&(Array.isArray(i)?i.forEach(a=>z(r,e,a)):z(r,e,i));}),r}},R={bodySerializer:t=>JSON.stringify(t,(r,e)=>typeof e==\"bigint\"?e.toString():e)},$={bodySerializer:t=>{let r=new URLSearchParams;return Object.entries(t).forEach(([e,i])=>{i!=null&&(Array.isArray(i)?i.forEach(a=>I(r,e,a)):I(r,e,i));}),r.toString()}},U=t=>{switch(t){case \"label\":return \".\";case \"matrix\":return \";\";case \"simple\":return \",\";default:return \"&\"}},_=t=>{switch(t){case \"form\":return \",\";case \"pipeDelimited\":return \"|\";case \"spaceDelimited\":return \"%20\";default:return \",\"}},D=t=>{switch(t){case \"label\":return \".\";case \"matrix\":return \";\";case \"simple\":return \",\";default:return \"&\"}},O=({allowReserved:t,explode:r,name:e,style:i,value:a})=>{if(!r){let n=(t?a:a.map(l=>encodeURIComponent(l))).join(_(i));switch(i){case \"label\":return `.${n}`;case \"matrix\":return `;${e}=${n}`;case \"simple\":return n;default:return `${e}=${n}`}}let o=U(i),s=a.map(n=>i===\"label\"||i===\"simple\"?t?n:encodeURIComponent(n):y({allowReserved:t,name:e,value:n})).join(o);return i===\"label\"||i===\"matrix\"?o+s:s},y=({allowReserved:t,name:r,value:e})=>{if(e==null)return \"\";if(typeof e==\"object\")throw new Error(\"Deeply-nested arrays/objects aren\\u2019t supported. Provide your own `querySerializer()` to handle these.\");return `${r}=${t?e:encodeURIComponent(e)}`},q=({allowReserved:t,explode:r,name:e,style:i,value:a})=>{if(a instanceof Date)return `${e}=${a.toISOString()}`;if(i!==\"deepObject\"&&!r){let n=[];Object.entries(a).forEach(([f,p])=>{n=[...n,f,t?p:encodeURIComponent(p)];});let l=n.join(\",\");switch(i){case \"form\":return `${e}=${l}`;case \"label\":return `.${l}`;case \"matrix\":return `;${e}=${l}`;default:return l}}let o=D(i),s=Object.entries(a).map(([n,l])=>y({allowReserved:t,name:i===\"deepObject\"?`${e}[${n}]`:n,value:l})).join(o);return i===\"label\"||i===\"matrix\"?o+s:s};var H=/\\{[^{}]+\\}/g,B=({path:t,url:r})=>{let e=r,i=r.match(H);if(i)for(let a of i){let o=false,s=a.substring(1,a.length-1),n=\"simple\";s.endsWith(\"*\")&&(o=true,s=s.substring(0,s.length-1)),s.startsWith(\".\")?(s=s.substring(1),n=\"label\"):s.startsWith(\";\")&&(s=s.substring(1),n=\"matrix\");let l=t[s];if(l==null)continue;if(Array.isArray(l)){e=e.replace(a,O({explode:o,name:s,style:n,value:l}));continue}if(typeof l==\"object\"){e=e.replace(a,q({explode:o,name:s,style:n,value:l}));continue}if(n===\"matrix\"){e=e.replace(a,`;${y({name:s,value:l})}`);continue}let f=encodeURIComponent(n===\"label\"?`.${l}`:l);e=e.replace(a,f);}return e},A=({allowReserved:t,array:r,object:e}={})=>a=>{let o=[];if(a&&typeof a==\"object\")for(let s in a){let n=a[s];if(n!=null)if(Array.isArray(n)){let l=O({allowReserved:t,explode:true,name:s,style:\"form\",value:n,...r});l&&o.push(l);}else if(typeof n==\"object\"){let l=q({allowReserved:t,explode:true,name:s,style:\"deepObject\",value:n,...e});l&&o.push(l);}else {let l=y({allowReserved:t,name:s,value:n});l&&o.push(l);}}return o.join(\"&\")},P=t=>{if(!t)return \"stream\";let r=t.split(\";\")[0]?.trim();if(r){if(r.startsWith(\"application/json\")||r.endsWith(\"+json\"))return \"json\";if(r===\"multipart/form-data\")return \"formData\";if([\"application/\",\"audio/\",\"image/\",\"video/\"].some(e=>r.startsWith(e)))return \"blob\";if(r.startsWith(\"text/\"))return \"text\"}},E=async({security:t,...r})=>{for(let e of t){let i=await j(e,r.auth);if(!i)continue;let a=e.name??\"Authorization\";switch(e.in){case \"query\":r.query||(r.query={}),r.query[a]=i;break;case \"cookie\":r.headers.append(\"Cookie\",`${a}=${i}`);break;case \"header\":default:r.headers.set(a,i);break}return}},S=t=>W({baseUrl:t.baseUrl,path:t.path,query:t.query,querySerializer:typeof t.querySerializer==\"function\"?t.querySerializer:A(t.querySerializer),url:t.url}),W=({baseUrl:t,path:r,query:e,querySerializer:i,url:a})=>{let o=a.startsWith(\"/\")?a:`/${a}`,s=(t??\"\")+o;r&&(s=B({path:r,url:s}));let n=e?i(e):\"\";return n.startsWith(\"?\")&&(n=n.substring(1)),n&&(s+=`?${n}`),s},x=(t,r)=>{let e={...t,...r};return e.baseUrl?.endsWith(\"/\")&&(e.baseUrl=e.baseUrl.substring(0,e.baseUrl.length-1)),e.headers=C(t.headers,r.headers),e},C=(...t)=>{let r=new Headers;for(let e of t){if(!e||typeof e!=\"object\")continue;let i=e instanceof Headers?e.entries():Object.entries(e);for(let[a,o]of i)if(o===null)r.delete(a);else if(Array.isArray(o))for(let s of o)r.append(a,s);else o!==void 0&&r.set(a,typeof o==\"object\"?JSON.stringify(o):o);}return r},h=class{_fns;constructor(){this._fns=[];}clear(){this._fns=[];}getInterceptorIndex(r){return typeof r==\"number\"?this._fns[r]?r:-1:this._fns.indexOf(r)}exists(r){let e=this.getInterceptorIndex(r);return !!this._fns[e]}eject(r){let e=this.getInterceptorIndex(r);this._fns[e]&&(this._fns[e]=null);}update(r,e){let i=this.getInterceptorIndex(r);return this._fns[i]?(this._fns[i]=e,r):false}use(r){return this._fns=[...this._fns,r],this._fns.length-1}},v=()=>({error:new h,request:new h,response:new h}),N=A({allowReserved:false,array:{explode:true,style:\"form\"},object:{explode:true,style:\"deepObject\"}}),Q={\"Content-Type\":\"application/json\"},w=(t={})=>({...R,headers:Q,parseAs:\"auto\",querySerializer:N,...t});var J=(t={})=>{let r=x(w(),t),e=()=>({...r}),i=s=>(r=x(r,s),e()),a=v(),o=async s=>{let n={...r,...s,fetch:s.fetch??r.fetch??globalThis.fetch,headers:C(r.headers,s.headers)};n.security&&await E({...n,security:n.security}),n.body&&n.bodySerializer&&(n.body=n.bodySerializer(n.body)),(n.body===void 0||n.body===\"\")&&n.headers.delete(\"Content-Type\");let l=S(n),f={redirect:\"follow\",...n},p=new Request(l,f);for(let c of a.request._fns)c&&(p=await c(p,n));let T=n.fetch,u=await T(p);for(let c of a.response._fns)c&&(u=await c(u,p,n));let m={request:p,response:u};if(u.ok){if(u.status===204||u.headers.get(\"Content-Length\")===\"0\")return {data:{},...m};let c=(n.parseAs===\"auto\"?P(u.headers.get(\"Content-Type\")):n.parseAs)??\"json\";if(c===\"stream\")return {data:u.body,...m};let b=await u[c]();return c===\"json\"&&(n.responseValidator&&await n.responseValidator(b),n.responseTransformer&&(b=await n.responseTransformer(b))),{data:b,...m}}let g=await u.text();try{g=JSON.parse(g);}catch{}let d=g;for(let c of a.error._fns)c&&(d=await c(g,u,p,n));if(d=d||{},n.throwOnError)throw d;return {error:d,...m}};return {buildUrl:S,connect:s=>o({...s,method:\"CONNECT\"}),delete:s=>o({...s,method:\"DELETE\"}),get:s=>o({...s,method:\"GET\"}),getConfig:e,head:s=>o({...s,method:\"HEAD\"}),interceptors:a,options:s=>o({...s,method:\"OPTIONS\"}),patch:s=>o({...s,method:\"PATCH\"}),post:s=>o({...s,method:\"POST\"}),put:s=>o({...s,method:\"PUT\"}),request:o,setConfig:i,trace:s=>o({...s,method:\"TRACE\"})}};export{J as createClient,w as createConfig,k as formDataBodySerializer,R as jsonBodySerializer,$ as urlSearchParamsBodySerializer};//# sourceMappingURL=index.js.map\n//# sourceMappingURL=index.js.map","// This file is auto-generated by @hey-api/openapi-ts\n\nimport type { ClientOptions } from './types.gen';\nimport { type Config, type ClientOptions as DefaultClientOptions, createClient, createConfig } from '@hey-api/client-fetch';\n\n/**\n * The `createClientConfig()` function will be called on client initialization\n * and the returned object will become the client's initial configuration.\n *\n * You may want to initialize your client this way instead of calling\n * `setConfig()`. This is useful for example if you're using Next.js\n * to ensure your client always has the correct values.\n */\nexport type CreateClientConfig<T extends DefaultClientOptions = ClientOptions> = (override?: Config<DefaultClientOptions & T>) => Config<Required<DefaultClientOptions> & T>;\n\nexport const client = createClient(createConfig<ClientOptions>({\n    baseUrl: 'https://localhost:44312'\n}));","// This file is auto-generated by @hey-api/openapi-ts\n\nimport type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';\nimport type { ImpersonationData, ImpersonationResponse, StopImpersonationData, StopImpersonationResponse } from './types.gen';\nimport { client as _heyApiClient } from './client.gen';\n\nexport type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {\n    /**\n     * You can provide a client instance returned by `createClient()` instead of\n     * individual options. This might be also useful if you want to implement a\n     * custom client.\n     */\n    client?: Client;\n    /**\n     * You can pass arbitrary values through the `meta` object. This can be\n     * used to access values that aren't defined as part of the SDK function.\n     */\n    meta?: Record<string, unknown>;\n};\n\nexport class ImpersonationService {\n    public static impersonation<ThrowOnError extends boolean = false>(options: Options<ImpersonationData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<ImpersonationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/backoffice/impersonation/v1/Impersonation/{memberKey}',\n            ...options\n        });\n    }\n    \n    public static stopImpersonation<ThrowOnError extends boolean = false>(options?: Options<StopImpersonationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<StopImpersonationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/backoffice/impersonation/v1/StopImpersonation',\n            ...options\n        });\n    }\n    \n}","import {UmbControllerHostElement} from \"@umbraco-cms/backoffice/controller-api\";\nimport {UmbEntityActionArgs, UmbEntityActionBase} from \"@umbraco-cms/backoffice/entity-action\";\nimport {UMB_MODAL_MANAGER_CONTEXT, UmbModalManagerContext} from \"@umbraco-cms/backoffice/modal\";\nimport {UmbMemberDetailRepository} from '@umbraco-cms/backoffice/member';\nimport {MEMBER_IMPERSONATION_MODAL} from \"../modals/modal-token.ts\";\nimport {ImpersonationService} from \"../impersonation-api\";\n\nexport class ImpersonateMember extends UmbEntityActionBase<UmbMemberDetailRepository> {\n  #modalManagerContext?: UmbModalManagerContext;\n\n  constructor(host: UmbControllerHostElement, args: UmbEntityActionArgs<UmbMemberDetailRepository>) {\n    super(host, args)\n    this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (instance) => {\n      this.#modalManagerContext = instance;\n    });\n  }\n\n  async execute() {\n    const modal = this.#modalManagerContext?.open(this, MEMBER_IMPERSONATION_MODAL, {\n      data: {\n        headline: 'Impersonate',\n        content: 'Do you want to impersonate this user?',\n      }\n    });\n\n    await modal?.onSubmit().then(async (data) => {\n      return ImpersonationService.impersonation({\n        path: {memberKey: this.args.unique?.toString() ?? ''}\n      }).then(({response}) => {\n        if (response.ok) {\n          window.location.href = data.page ? data.page : '/';\n        }\n      }).catch(() => {\n        return;\n      });\n    });\n  }\n}\n","export const MemberSectionCondition = {\n  alias: 'Umb.Condition.SectionAlias',\n  match: 'Umb.Section.Members',\n}\n\nexport const AccessToSensitiveDataCondition = {\n  alias: 'Umb.Condition.CurrentUser.HasAccessToSensitiveData',\n}\n","//import the entity type for Member\r\nimport {UMB_MEMBER_ENTITY_TYPE} from \"@umbraco-cms/backoffice/member\";\r\n//import our entity action definition\r\nimport {ImpersonateMember} from \"./member.entity.action\";\r\nimport {AccessToSensitiveDataCondition, MemberSectionCondition} from \"../constants/member-section-condition.ts\";\r\n\r\nconst entityAction: UmbExtensionManifest = {\r\n  type: 'entityAction',\r\n  kind: 'default',\r\n  alias: 'member.entity.action',\r\n  name: 'member action',\r\n  weight: 1,\r\n  forEntityTypes: [\r\n    UMB_MEMBER_ENTITY_TYPE\r\n  ],\r\n  api: ImpersonateMember,\r\n  meta: {\r\n    icon: 'icon-operator',\r\n    label: 'Impersonate...',\r\n  },\r\n  conditions: [\r\n    MemberSectionCondition,\r\n    AccessToSensitiveDataCondition\r\n  ]\r\n}\r\n\r\nexport const manifests = [entityAction];\r\n","// This file is auto-generated by @hey-api/openapi-ts\n\nimport type { ClientOptions } from './types.gen';\nimport { type Config, type ClientOptions as DefaultClientOptions, createClient, createConfig } from '@hey-api/client-fetch';\n\n/**\n * The `createClientConfig()` function will be called on client initialization\n * and the returned object will become the client's initial configuration.\n *\n * You may want to initialize your client this way instead of calling\n * `setConfig()`. This is useful for example if you're using Next.js\n * to ensure your client always has the correct values.\n */\nexport type CreateClientConfig<T extends DefaultClientOptions = ClientOptions> = (override?: Config<DefaultClientOptions & T>) => Config<Required<DefaultClientOptions> & T>;\n\nexport const client = createClient(createConfig<ClientOptions>({\n    baseUrl: 'https://localhost:44312'\n}));","// This file is auto-generated by @hey-api/openapi-ts\n\nimport { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from '@hey-api/client-fetch';\nimport type { GetCultureData, GetCultureResponse, PostDataTypeData, PostDataTypeError, DeleteDataTypeByIdData, DeleteDataTypeByIdError, GetDataTypeByIdData, GetDataTypeByIdResponse, GetDataTypeByIdError, PutDataTypeByIdData, PutDataTypeByIdError, PostDataTypeByIdCopyData, PostDataTypeByIdCopyError, GetDataTypeByIdIsUsedData, GetDataTypeByIdIsUsedResponse, GetDataTypeByIdIsUsedError, PutDataTypeByIdMoveData, PutDataTypeByIdMoveError, GetDataTypeByIdReferencedByData, GetDataTypeByIdReferencedByResponse, GetDataTypeByIdReferencesData, GetDataTypeByIdReferencesResponse, GetDataTypeByIdReferencesError, GetDataTypeConfigurationData, GetDataTypeConfigurationResponse, PostDataTypeFolderData, PostDataTypeFolderError, DeleteDataTypeFolderByIdData, DeleteDataTypeFolderByIdError, GetDataTypeFolderByIdData, GetDataTypeFolderByIdResponse, GetDataTypeFolderByIdError, PutDataTypeFolderByIdData, PutDataTypeFolderByIdError, GetFilterDataTypeData, GetFilterDataTypeResponse, GetItemDataTypeData, GetItemDataTypeResponse, GetItemDataTypeSearchData, GetItemDataTypeSearchResponse, GetTreeDataTypeAncestorsData, GetTreeDataTypeAncestorsResponse, GetTreeDataTypeChildrenData, GetTreeDataTypeChildrenResponse, GetTreeDataTypeRootData, GetTreeDataTypeRootResponse, GetDictionaryData, GetDictionaryResponse, PostDictionaryData, PostDictionaryError, DeleteDictionaryByIdData, DeleteDictionaryByIdError, GetDictionaryByIdData, GetDictionaryByIdResponse, GetDictionaryByIdError, PutDictionaryByIdData, PutDictionaryByIdError, GetDictionaryByIdExportData, GetDictionaryByIdExportResponse, GetDictionaryByIdExportError, PutDictionaryByIdMoveData, PutDictionaryByIdMoveError, PostDictionaryImportData, PostDictionaryImportError, GetItemDictionaryData, GetItemDictionaryResponse, GetTreeDictionaryAncestorsData, GetTreeDictionaryAncestorsResponse, GetTreeDictionaryChildrenData, GetTreeDictionaryChildrenResponse, GetTreeDictionaryRootData, GetTreeDictionaryRootResponse, PostDocumentBlueprintData, PostDocumentBlueprintError, DeleteDocumentBlueprintByIdData, DeleteDocumentBlueprintByIdError, GetDocumentBlueprintByIdData, GetDocumentBlueprintByIdResponse, GetDocumentBlueprintByIdError, PutDocumentBlueprintByIdData, PutDocumentBlueprintByIdError, PutDocumentBlueprintByIdMoveData, PutDocumentBlueprintByIdMoveError, GetDocumentBlueprintByIdScaffoldData, GetDocumentBlueprintByIdScaffoldResponse, GetDocumentBlueprintByIdScaffoldError, PostDocumentBlueprintFolderData, PostDocumentBlueprintFolderError, DeleteDocumentBlueprintFolderByIdData, DeleteDocumentBlueprintFolderByIdError, GetDocumentBlueprintFolderByIdData, GetDocumentBlueprintFolderByIdResponse, GetDocumentBlueprintFolderByIdError, PutDocumentBlueprintFolderByIdData, PutDocumentBlueprintFolderByIdError, PostDocumentBlueprintFromDocumentData, PostDocumentBlueprintFromDocumentError, GetItemDocumentBlueprintData, GetItemDocumentBlueprintResponse, GetTreeDocumentBlueprintAncestorsData, GetTreeDocumentBlueprintAncestorsResponse, GetTreeDocumentBlueprintChildrenData, GetTreeDocumentBlueprintChildrenResponse, GetTreeDocumentBlueprintRootData, GetTreeDocumentBlueprintRootResponse, PostDocumentTypeData, PostDocumentTypeError, DeleteDocumentTypeByIdData, DeleteDocumentTypeByIdError, GetDocumentTypeByIdData, GetDocumentTypeByIdResponse, GetDocumentTypeByIdError, PutDocumentTypeByIdData, PutDocumentTypeByIdError, GetDocumentTypeByIdAllowedChildrenData, GetDocumentTypeByIdAllowedChildrenResponse, GetDocumentTypeByIdAllowedChildrenError, GetDocumentTypeByIdBlueprintData, GetDocumentTypeByIdBlueprintResponse, GetDocumentTypeByIdBlueprintError, GetDocumentTypeByIdCompositionReferencesData, GetDocumentTypeByIdCompositionReferencesResponse, GetDocumentTypeByIdCompositionReferencesError, PostDocumentTypeByIdCopyData, PostDocumentTypeByIdCopyError, GetDocumentTypeByIdExportData, GetDocumentTypeByIdExportResponse, GetDocumentTypeByIdExportError, PutDocumentTypeByIdImportData, PutDocumentTypeByIdImportError, PutDocumentTypeByIdMoveData, PutDocumentTypeByIdMoveError, GetDocumentTypeAllowedAtRootData, GetDocumentTypeAllowedAtRootResponse, PostDocumentTypeAvailableCompositionsData, PostDocumentTypeAvailableCompositionsResponse, GetDocumentTypeConfigurationData, GetDocumentTypeConfigurationResponse, PostDocumentTypeFolderData, PostDocumentTypeFolderError, DeleteDocumentTypeFolderByIdData, DeleteDocumentTypeFolderByIdError, GetDocumentTypeFolderByIdData, GetDocumentTypeFolderByIdResponse, GetDocumentTypeFolderByIdError, PutDocumentTypeFolderByIdData, PutDocumentTypeFolderByIdError, PostDocumentTypeImportData, PostDocumentTypeImportError, GetItemDocumentTypeData, GetItemDocumentTypeResponse, GetItemDocumentTypeSearchData, GetItemDocumentTypeSearchResponse, GetTreeDocumentTypeAncestorsData, GetTreeDocumentTypeAncestorsResponse, GetTreeDocumentTypeChildrenData, GetTreeDocumentTypeChildrenResponse, GetTreeDocumentTypeRootData, GetTreeDocumentTypeRootResponse, GetDocumentVersionData, GetDocumentVersionResponse, GetDocumentVersionError, GetDocumentVersionByIdData, GetDocumentVersionByIdResponse, GetDocumentVersionByIdError, PutDocumentVersionByIdPreventCleanupData, PutDocumentVersionByIdPreventCleanupError, PostDocumentVersionByIdRollbackData, PostDocumentVersionByIdRollbackError, GetCollectionDocumentByIdData, GetCollectionDocumentByIdResponse, GetCollectionDocumentByIdError, PostDocumentData, PostDocumentError, DeleteDocumentByIdData, DeleteDocumentByIdError, GetDocumentByIdData, GetDocumentByIdResponse, GetDocumentByIdError, PutDocumentByIdData, PutDocumentByIdError, GetDocumentByIdAuditLogData, GetDocumentByIdAuditLogResponse, PostDocumentByIdCopyData, PostDocumentByIdCopyError, GetDocumentByIdDomainsData, GetDocumentByIdDomainsResponse, GetDocumentByIdDomainsError, PutDocumentByIdDomainsData, PutDocumentByIdDomainsError, PutDocumentByIdMoveData, PutDocumentByIdMoveError, PutDocumentByIdMoveToRecycleBinData, PutDocumentByIdMoveToRecycleBinError, GetDocumentByIdNotificationsData, GetDocumentByIdNotificationsResponse, GetDocumentByIdNotificationsError, PutDocumentByIdNotificationsData, PutDocumentByIdNotificationsError, DeleteDocumentByIdPublicAccessData, DeleteDocumentByIdPublicAccessError, GetDocumentByIdPublicAccessData, GetDocumentByIdPublicAccessResponse, GetDocumentByIdPublicAccessError, PostDocumentByIdPublicAccessData, PostDocumentByIdPublicAccessError, PutDocumentByIdPublicAccessData, PutDocumentByIdPublicAccessError, PutDocumentByIdPublishData, PutDocumentByIdPublishError, PutDocumentByIdPublishWithDescendantsData, PutDocumentByIdPublishWithDescendantsResponse, PutDocumentByIdPublishWithDescendantsError, GetDocumentByIdPublishWithDescendantsResultByTaskIdData, GetDocumentByIdPublishWithDescendantsResultByTaskIdResponse, GetDocumentByIdPublishWithDescendantsResultByTaskIdError, GetDocumentByIdPublishedData, GetDocumentByIdPublishedResponse, GetDocumentByIdPublishedError, GetDocumentByIdReferencedByData, GetDocumentByIdReferencedByResponse, GetDocumentByIdReferencedDescendantsData, GetDocumentByIdReferencedDescendantsResponse, PutDocumentByIdUnpublishData, PutDocumentByIdUnpublishError, PutUmbracoManagementApiV11DocumentByIdValidate11Data, PutUmbracoManagementApiV11DocumentByIdValidate11Error, GetDocumentAreReferencedData, GetDocumentAreReferencedResponse, GetDocumentConfigurationData, GetDocumentConfigurationResponse, PutDocumentSortData, PutDocumentSortError, GetDocumentUrlsData, GetDocumentUrlsResponse, PostDocumentValidateData, PostDocumentValidateError, GetItemDocumentData, GetItemDocumentResponse, GetItemDocumentSearchData, GetItemDocumentSearchResponse, DeleteRecycleBinDocumentData, DeleteRecycleBinDocumentError, DeleteRecycleBinDocumentByIdData, DeleteRecycleBinDocumentByIdError, GetRecycleBinDocumentByIdOriginalParentData, GetRecycleBinDocumentByIdOriginalParentResponse, GetRecycleBinDocumentByIdOriginalParentError, PutRecycleBinDocumentByIdRestoreData, PutRecycleBinDocumentByIdRestoreError, GetRecycleBinDocumentChildrenData, GetRecycleBinDocumentChildrenResponse, GetRecycleBinDocumentReferencedByData, GetRecycleBinDocumentReferencedByResponse, GetRecycleBinDocumentRootData, GetRecycleBinDocumentRootResponse, GetTreeDocumentAncestorsData, GetTreeDocumentAncestorsResponse, GetTreeDocumentChildrenData, GetTreeDocumentChildrenResponse, GetTreeDocumentRootData, GetTreeDocumentRootResponse, PostDynamicRootQueryData, PostDynamicRootQueryResponse, GetDynamicRootStepsData, GetDynamicRootStepsResponse, GetHealthCheckGroupData, GetHealthCheckGroupResponse, GetHealthCheckGroupByNameData, GetHealthCheckGroupByNameResponse, GetHealthCheckGroupByNameError, PostHealthCheckGroupByNameCheckData, PostHealthCheckGroupByNameCheckResponse, PostHealthCheckGroupByNameCheckError, PostHealthCheckExecuteActionData, PostHealthCheckExecuteActionResponse, PostHealthCheckExecuteActionError, GetHelpData, GetHelpResponse, GetHelpError, GetImagingResizeUrlsData, GetImagingResizeUrlsResponse, GetImportAnalyzeData, GetImportAnalyzeResponse, GetImportAnalyzeError, GetIndexerData, GetIndexerResponse, GetIndexerByIndexNameData, GetIndexerByIndexNameResponse, GetIndexerByIndexNameError, PostIndexerByIndexNameRebuildData, PostIndexerByIndexNameRebuildError, GetInstallSettingsData, GetInstallSettingsResponse, GetInstallSettingsError, PostInstallSetupData, PostInstallSetupError, PostInstallValidateDatabaseData, PostInstallValidateDatabaseError, GetItemLanguageData, GetItemLanguageResponse, GetItemLanguageDefaultData, GetItemLanguageDefaultResponse, GetLanguageData, GetLanguageResponse, PostLanguageData, PostLanguageError, DeleteLanguageByIsoCodeData, DeleteLanguageByIsoCodeError, GetLanguageByIsoCodeData, GetLanguageByIsoCodeResponse, GetLanguageByIsoCodeError, PutLanguageByIsoCodeData, PutLanguageByIsoCodeError, GetLogViewerLevelData, GetLogViewerLevelResponse, GetLogViewerLevelCountData, GetLogViewerLevelCountResponse, GetLogViewerLevelCountError, GetLogViewerLogData, GetLogViewerLogResponse, GetLogViewerMessageTemplateData, GetLogViewerMessageTemplateResponse, GetLogViewerMessageTemplateError, GetLogViewerSavedSearchData, GetLogViewerSavedSearchResponse, PostLogViewerSavedSearchData, PostLogViewerSavedSearchError, DeleteLogViewerSavedSearchByNameData, DeleteLogViewerSavedSearchByNameError, GetLogViewerSavedSearchByNameData, GetLogViewerSavedSearchByNameResponse, GetLogViewerSavedSearchByNameError, GetLogViewerValidateLogsSizeData, GetLogViewerValidateLogsSizeError, GetManifestManifestData, GetManifestManifestResponse, GetManifestManifestPrivateData, GetManifestManifestPrivateResponse, GetManifestManifestPublicData, GetManifestManifestPublicResponse, GetItemMediaTypeData, GetItemMediaTypeResponse, GetItemMediaTypeAllowedData, GetItemMediaTypeAllowedResponse, GetItemMediaTypeFoldersData, GetItemMediaTypeFoldersResponse, GetItemMediaTypeSearchData, GetItemMediaTypeSearchResponse, PostMediaTypeData, PostMediaTypeError, DeleteMediaTypeByIdData, DeleteMediaTypeByIdError, GetMediaTypeByIdData, GetMediaTypeByIdResponse, GetMediaTypeByIdError, PutMediaTypeByIdData, PutMediaTypeByIdError, GetMediaTypeByIdAllowedChildrenData, GetMediaTypeByIdAllowedChildrenResponse, GetMediaTypeByIdAllowedChildrenError, GetMediaTypeByIdCompositionReferencesData, GetMediaTypeByIdCompositionReferencesResponse, GetMediaTypeByIdCompositionReferencesError, PostMediaTypeByIdCopyData, PostMediaTypeByIdCopyError, GetMediaTypeByIdExportData, GetMediaTypeByIdExportResponse, GetMediaTypeByIdExportError, PutMediaTypeByIdImportData, PutMediaTypeByIdImportError, PutMediaTypeByIdMoveData, PutMediaTypeByIdMoveError, GetMediaTypeAllowedAtRootData, GetMediaTypeAllowedAtRootResponse, PostMediaTypeAvailableCompositionsData, PostMediaTypeAvailableCompositionsResponse, GetMediaTypeConfigurationData, GetMediaTypeConfigurationResponse, PostMediaTypeFolderData, PostMediaTypeFolderError, DeleteMediaTypeFolderByIdData, DeleteMediaTypeFolderByIdError, GetMediaTypeFolderByIdData, GetMediaTypeFolderByIdResponse, GetMediaTypeFolderByIdError, PutMediaTypeFolderByIdData, PutMediaTypeFolderByIdError, PostMediaTypeImportData, PostMediaTypeImportError, GetTreeMediaTypeAncestorsData, GetTreeMediaTypeAncestorsResponse, GetTreeMediaTypeChildrenData, GetTreeMediaTypeChildrenResponse, GetTreeMediaTypeRootData, GetTreeMediaTypeRootResponse, GetCollectionMediaData, GetCollectionMediaResponse, GetCollectionMediaError, GetItemMediaData, GetItemMediaResponse, GetItemMediaSearchData, GetItemMediaSearchResponse, PostMediaData, PostMediaError, DeleteMediaByIdData, DeleteMediaByIdError, GetMediaByIdData, GetMediaByIdResponse, GetMediaByIdError, PutMediaByIdData, PutMediaByIdError, GetMediaByIdAuditLogData, GetMediaByIdAuditLogResponse, PutMediaByIdMoveData, PutMediaByIdMoveError, PutMediaByIdMoveToRecycleBinData, PutMediaByIdMoveToRecycleBinError, GetMediaByIdReferencedByData, GetMediaByIdReferencedByResponse, GetMediaByIdReferencedDescendantsData, GetMediaByIdReferencedDescendantsResponse, PutMediaByIdValidateData, PutMediaByIdValidateError, GetMediaAreReferencedData, GetMediaAreReferencedResponse, GetMediaConfigurationData, GetMediaConfigurationResponse, PutMediaSortData, PutMediaSortError, GetMediaUrlsData, GetMediaUrlsResponse, PostMediaValidateData, PostMediaValidateError, DeleteRecycleBinMediaData, DeleteRecycleBinMediaError, DeleteRecycleBinMediaByIdData, DeleteRecycleBinMediaByIdError, GetRecycleBinMediaByIdOriginalParentData, GetRecycleBinMediaByIdOriginalParentResponse, GetRecycleBinMediaByIdOriginalParentError, PutRecycleBinMediaByIdRestoreData, PutRecycleBinMediaByIdRestoreError, GetRecycleBinMediaChildrenData, GetRecycleBinMediaChildrenResponse, GetRecycleBinMediaReferencedByData, GetRecycleBinMediaReferencedByResponse, GetRecycleBinMediaRootData, GetRecycleBinMediaRootResponse, GetTreeMediaAncestorsData, GetTreeMediaAncestorsResponse, GetTreeMediaChildrenData, GetTreeMediaChildrenResponse, GetTreeMediaRootData, GetTreeMediaRootResponse, GetItemMemberGroupData, GetItemMemberGroupResponse, GetMemberGroupData, GetMemberGroupResponse, PostMemberGroupData, PostMemberGroupError, DeleteMemberGroupByIdData, DeleteMemberGroupByIdError, GetMemberGroupByIdData, GetMemberGroupByIdResponse, PutMemberGroupByIdData, PutMemberGroupByIdError, GetTreeMemberGroupRootData, GetTreeMemberGroupRootResponse, GetItemMemberTypeData, GetItemMemberTypeResponse, GetItemMemberTypeSearchData, GetItemMemberTypeSearchResponse, PostMemberTypeData, PostMemberTypeError, DeleteMemberTypeByIdData, DeleteMemberTypeByIdError, GetMemberTypeByIdData, GetMemberTypeByIdResponse, GetMemberTypeByIdError, PutMemberTypeByIdData, PutMemberTypeByIdError, GetMemberTypeByIdCompositionReferencesData, GetMemberTypeByIdCompositionReferencesResponse, GetMemberTypeByIdCompositionReferencesError, PostMemberTypeByIdCopyData, PostMemberTypeByIdCopyError, PostMemberTypeAvailableCompositionsData, PostMemberTypeAvailableCompositionsResponse, GetMemberTypeConfigurationData, GetMemberTypeConfigurationResponse, GetTreeMemberTypeRootData, GetTreeMemberTypeRootResponse, GetFilterMemberData, GetFilterMemberResponse, GetFilterMemberError, GetItemMemberData, GetItemMemberResponse, GetItemMemberSearchData, GetItemMemberSearchResponse, PostMemberData, PostMemberError, DeleteMemberByIdData, DeleteMemberByIdError, GetMemberByIdData, GetMemberByIdResponse, GetMemberByIdError, PutMemberByIdData, PutMemberByIdError, GetMemberByIdReferencedByData, GetMemberByIdReferencedByResponse, GetMemberByIdReferencedDescendantsData, GetMemberByIdReferencedDescendantsResponse, PutMemberByIdValidateData, PutMemberByIdValidateError, GetMemberAreReferencedData, GetMemberAreReferencedResponse, GetMemberConfigurationData, GetMemberConfigurationResponse, PostMemberValidateData, PostMemberValidateError, PostModelsBuilderBuildData, PostModelsBuilderBuildError, GetModelsBuilderDashboardData, GetModelsBuilderDashboardResponse, GetModelsBuilderStatusData, GetModelsBuilderStatusResponse, GetObjectTypesData, GetObjectTypesResponse, GetOembedQueryData, GetOembedQueryResponse, PostPackageByNameRunMigrationData, PostPackageByNameRunMigrationError, GetPackageConfigurationData, GetPackageConfigurationResponse, GetPackageCreatedData, GetPackageCreatedResponse, PostPackageCreatedData, PostPackageCreatedError, DeletePackageCreatedByIdData, DeletePackageCreatedByIdError, GetPackageCreatedByIdData, GetPackageCreatedByIdResponse, GetPackageCreatedByIdError, PutPackageCreatedByIdData, PutPackageCreatedByIdError, GetPackageCreatedByIdDownloadData, GetPackageCreatedByIdDownloadResponse, GetPackageCreatedByIdDownloadError, GetPackageMigrationStatusData, GetPackageMigrationStatusResponse, GetItemPartialViewData, GetItemPartialViewResponse, PostPartialViewData, PostPartialViewError, DeletePartialViewByPathData, DeletePartialViewByPathError, GetPartialViewByPathData, GetPartialViewByPathResponse, GetPartialViewByPathError, PutPartialViewByPathData, PutPartialViewByPathError, PutPartialViewByPathRenameData, PutPartialViewByPathRenameError, PostPartialViewFolderData, PostPartialViewFolderError, DeletePartialViewFolderByPathData, DeletePartialViewFolderByPathError, GetPartialViewFolderByPathData, GetPartialViewFolderByPathResponse, GetPartialViewFolderByPathError, GetPartialViewSnippetData, GetPartialViewSnippetResponse, GetPartialViewSnippetByIdData, GetPartialViewSnippetByIdResponse, GetPartialViewSnippetByIdError, GetTreePartialViewAncestorsData, GetTreePartialViewAncestorsResponse, GetTreePartialViewChildrenData, GetTreePartialViewChildrenResponse, GetTreePartialViewRootData, GetTreePartialViewRootResponse, DeletePreviewData, PostPreviewData, GetProfilingStatusData, GetProfilingStatusResponse, PutProfilingStatusData, GetPropertyTypeIsUsedData, GetPropertyTypeIsUsedResponse, GetPropertyTypeIsUsedError, PostPublishedCacheRebuildData, GetPublishedCacheRebuildStatusData, GetPublishedCacheRebuildStatusResponse, PostPublishedCacheReloadData, GetRedirectManagementData, GetRedirectManagementResponse, GetRedirectManagementError, DeleteRedirectManagementByIdData, GetRedirectManagementByIdData, GetRedirectManagementByIdResponse, GetRedirectManagementStatusData, GetRedirectManagementStatusResponse, PostRedirectManagementStatusData, GetItemRelationTypeData, GetItemRelationTypeResponse, GetRelationTypeData, GetRelationTypeResponse, GetRelationTypeByIdData, GetRelationTypeByIdResponse, GetRelationTypeByIdError, GetRelationByRelationTypeIdData, GetRelationByRelationTypeIdResponse, GetRelationByRelationTypeIdError, GetItemScriptData, GetItemScriptResponse, PostScriptData, PostScriptError, DeleteScriptByPathData, DeleteScriptByPathError, GetScriptByPathData, GetScriptByPathResponse, GetScriptByPathError, PutScriptByPathData, PutScriptByPathError, PutScriptByPathRenameData, PutScriptByPathRenameError, PostScriptFolderData, PostScriptFolderError, DeleteScriptFolderByPathData, DeleteScriptFolderByPathError, GetScriptFolderByPathData, GetScriptFolderByPathResponse, GetScriptFolderByPathError, GetTreeScriptAncestorsData, GetTreeScriptAncestorsResponse, GetTreeScriptChildrenData, GetTreeScriptChildrenResponse, GetTreeScriptRootData, GetTreeScriptRootResponse, GetSearcherData, GetSearcherResponse, GetSearcherBySearcherNameQueryData, GetSearcherBySearcherNameQueryResponse, GetSearcherBySearcherNameQueryError, GetSecurityConfigurationData, GetSecurityConfigurationResponse, PostSecurityForgotPasswordData, PostSecurityForgotPasswordError, PostSecurityForgotPasswordResetData, PostSecurityForgotPasswordResetResponse, PostSecurityForgotPasswordResetError, PostSecurityForgotPasswordVerifyData, PostSecurityForgotPasswordVerifyResponse, PostSecurityForgotPasswordVerifyError, GetSegmentData, GetSegmentResponse, GetSegmentError, GetServerConfigurationData, GetServerConfigurationResponse, GetServerInformationData, GetServerInformationResponse, GetServerStatusData, GetServerStatusResponse, GetServerStatusError, GetServerTroubleshootingData, GetServerTroubleshootingResponse, GetServerUpgradeCheckData, GetServerUpgradeCheckResponse, GetItemStaticFileData, GetItemStaticFileResponse, GetTreeStaticFileAncestorsData, GetTreeStaticFileAncestorsResponse, GetTreeStaticFileChildrenData, GetTreeStaticFileChildrenResponse, GetTreeStaticFileRootData, GetTreeStaticFileRootResponse, GetItemStylesheetData, GetItemStylesheetResponse, PostStylesheetData, PostStylesheetError, DeleteStylesheetByPathData, DeleteStylesheetByPathError, GetStylesheetByPathData, GetStylesheetByPathResponse, GetStylesheetByPathError, PutStylesheetByPathData, PutStylesheetByPathError, PutStylesheetByPathRenameData, PutStylesheetByPathRenameError, PostStylesheetFolderData, PostStylesheetFolderError, DeleteStylesheetFolderByPathData, DeleteStylesheetFolderByPathError, GetStylesheetFolderByPathData, GetStylesheetFolderByPathResponse, GetStylesheetFolderByPathError, GetTreeStylesheetAncestorsData, GetTreeStylesheetAncestorsResponse, GetTreeStylesheetChildrenData, GetTreeStylesheetChildrenResponse, GetTreeStylesheetRootData, GetTreeStylesheetRootResponse, GetTagData, GetTagResponse, GetTelemetryData, GetTelemetryResponse, GetTelemetryLevelData, GetTelemetryLevelResponse, PostTelemetryLevelData, PostTelemetryLevelError, GetItemTemplateData, GetItemTemplateResponse, GetItemTemplateSearchData, GetItemTemplateSearchResponse, PostTemplateData, PostTemplateError, DeleteTemplateByIdData, DeleteTemplateByIdError, GetTemplateByIdData, GetTemplateByIdResponse, GetTemplateByIdError, PutTemplateByIdData, PutTemplateByIdError, GetTemplateConfigurationData, GetTemplateConfigurationResponse, PostTemplateQueryExecuteData, PostTemplateQueryExecuteResponse, GetTemplateQuerySettingsData, GetTemplateQuerySettingsResponse, GetTreeTemplateAncestorsData, GetTreeTemplateAncestorsResponse, GetTreeTemplateChildrenData, GetTreeTemplateChildrenResponse, GetTreeTemplateRootData, GetTreeTemplateRootResponse, PostTemporaryFileData, PostTemporaryFileError, DeleteTemporaryFileByIdData, DeleteTemporaryFileByIdError, GetTemporaryFileByIdData, GetTemporaryFileByIdResponse, GetTemporaryFileByIdError, GetTemporaryFileConfigurationData, GetTemporaryFileConfigurationResponse, PostUpgradeAuthorizeData, PostUpgradeAuthorizeError, GetUpgradeSettingsData, GetUpgradeSettingsResponse, GetUpgradeSettingsError, GetUserDataData, GetUserDataResponse, PostUserDataData, PostUserDataError, PutUserDataData, PutUserDataError, GetUserDataByIdData, GetUserDataByIdResponse, GetFilterUserGroupData, GetFilterUserGroupResponse, GetFilterUserGroupError, GetItemUserGroupData, GetItemUserGroupResponse, DeleteUserGroupData, DeleteUserGroupError, GetUserGroupData, GetUserGroupResponse, PostUserGroupData, PostUserGroupError, DeleteUserGroupByIdData, DeleteUserGroupByIdError, GetUserGroupByIdData, GetUserGroupByIdResponse, GetUserGroupByIdError, PutUserGroupByIdData, PutUserGroupByIdError, DeleteUserGroupByIdUsersData, DeleteUserGroupByIdUsersError, PostUserGroupByIdUsersData, PostUserGroupByIdUsersError, GetFilterUserData, GetFilterUserResponse, GetFilterUserError, GetItemUserData, GetItemUserResponse, DeleteUserData, DeleteUserError, GetUserData, GetUserResponse, GetUserError, PostUserData, PostUserError, DeleteUserByIdData, DeleteUserByIdError, GetUserByIdData, GetUserByIdResponse, GetUserByIdError, PutUserByIdData, PutUserByIdError, GetUserById2FaData, GetUserById2FaResponse, GetUserById2FaError, DeleteUserById2FaByProviderNameData, DeleteUserById2FaByProviderNameError, GetUserByIdCalculateStartNodesData, GetUserByIdCalculateStartNodesResponse, GetUserByIdCalculateStartNodesError, PostUserByIdChangePasswordData, PostUserByIdChangePasswordError, GetUserByIdClientCredentialsData, GetUserByIdClientCredentialsResponse, PostUserByIdClientCredentialsData, PostUserByIdClientCredentialsError, DeleteUserByIdClientCredentialsByClientIdData, DeleteUserByIdClientCredentialsByClientIdError, PostUserByIdResetPasswordData, PostUserByIdResetPasswordResponse, PostUserByIdResetPasswordError, DeleteUserAvatarByIdData, DeleteUserAvatarByIdError, PostUserAvatarByIdData, PostUserAvatarByIdError, GetUserConfigurationData, GetUserConfigurationResponse, GetUserCurrentData, GetUserCurrentResponse, GetUserCurrent2FaData, GetUserCurrent2FaResponse, DeleteUserCurrent2FaByProviderNameData, DeleteUserCurrent2FaByProviderNameError, GetUserCurrent2FaByProviderNameData, GetUserCurrent2FaByProviderNameResponse, GetUserCurrent2FaByProviderNameError, PostUserCurrent2FaByProviderNameData, PostUserCurrent2FaByProviderNameResponse, PostUserCurrent2FaByProviderNameError, PostUserCurrentAvatarData, PostUserCurrentAvatarError, PostUserCurrentChangePasswordData, PostUserCurrentChangePasswordError, GetUserCurrentConfigurationData, GetUserCurrentConfigurationResponse, GetUserCurrentLoginProvidersData, GetUserCurrentLoginProvidersResponse, GetUserCurrentPermissionsData, GetUserCurrentPermissionsResponse, GetUserCurrentPermissionsError, GetUserCurrentPermissionsDocumentData, GetUserCurrentPermissionsDocumentResponse, GetUserCurrentPermissionsDocumentError, GetUserCurrentPermissionsMediaData, GetUserCurrentPermissionsMediaResponse, GetUserCurrentPermissionsMediaError, PostUserDisableData, PostUserDisableError, PostUserEnableData, PostUserEnableError, PostUserInviteData, PostUserInviteError, PostUserInviteCreatePasswordData, PostUserInviteCreatePasswordError, PostUserInviteResendData, PostUserInviteResendError, PostUserInviteVerifyData, PostUserInviteVerifyResponse, PostUserInviteVerifyError, PostUserSetUserGroupsData, PostUserUnlockData, PostUserUnlockError, GetItemWebhookData, GetItemWebhookResponse, GetWebhookData, GetWebhookResponse, PostWebhookData, PostWebhookError, DeleteWebhookByIdData, DeleteWebhookByIdError, GetWebhookByIdData, GetWebhookByIdResponse, GetWebhookByIdError, PutWebhookByIdData, PutWebhookByIdError, GetWebhookByIdLogsData, GetWebhookByIdLogsResponse, GetWebhookEventsData, GetWebhookEventsResponse, GetWebhookLogsData, GetWebhookLogsResponse } from './types.gen';\nimport { client as _heyApiClient } from './client.gen';\n\nexport type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {\n    /**\n     * You can provide a client instance returned by `createClient()` instead of\n     * individual options. This might be also useful if you want to implement a\n     * custom client.\n     */\n    client?: Client;\n    /**\n     * You can pass arbitrary values through the `meta` object. This can be\n     * used to access values that aren't defined as part of the SDK function.\n     */\n    meta?: Record<string, unknown>;\n};\n\nexport class CultureService {\n    public static getCulture<ThrowOnError extends boolean = false>(options?: Options<GetCultureData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetCultureResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/culture',\n            ...options\n        });\n    }\n    \n}\n\nexport class DataTypeService {\n    public static postDataType<ThrowOnError extends boolean = false>(options?: Options<PostDataTypeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostDataTypeError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteDataTypeById<ThrowOnError extends boolean = false>(options: Options<DeleteDataTypeByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteDataTypeByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type/{id}',\n            ...options\n        });\n    }\n    \n    public static getDataTypeById<ThrowOnError extends boolean = false>(options: Options<GetDataTypeByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDataTypeByIdResponse, GetDataTypeByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type/{id}',\n            ...options\n        });\n    }\n    \n    public static putDataTypeById<ThrowOnError extends boolean = false>(options: Options<PutDataTypeByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDataTypeByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postDataTypeByIdCopy<ThrowOnError extends boolean = false>(options: Options<PostDataTypeByIdCopyData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<unknown, PostDataTypeByIdCopyError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type/{id}/copy',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDataTypeByIdIsUsed<ThrowOnError extends boolean = false>(options: Options<GetDataTypeByIdIsUsedData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDataTypeByIdIsUsedResponse, GetDataTypeByIdIsUsedError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type/{id}/is-used',\n            ...options\n        });\n    }\n    \n    public static putDataTypeByIdMove<ThrowOnError extends boolean = false>(options: Options<PutDataTypeByIdMoveData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDataTypeByIdMoveError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type/{id}/move',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDataTypeByIdReferencedBy<ThrowOnError extends boolean = false>(options: Options<GetDataTypeByIdReferencedByData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDataTypeByIdReferencedByResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type/{id}/referenced-by',\n            ...options\n        });\n    }\n    \n    /**\n     * @deprecated\n     */\n    public static getDataTypeByIdReferences<ThrowOnError extends boolean = false>(options: Options<GetDataTypeByIdReferencesData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDataTypeByIdReferencesResponse, GetDataTypeByIdReferencesError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type/{id}/references',\n            ...options\n        });\n    }\n    \n    public static getDataTypeConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetDataTypeConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetDataTypeConfigurationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type/configuration',\n            ...options\n        });\n    }\n    \n    public static postDataTypeFolder<ThrowOnError extends boolean = false>(options?: Options<PostDataTypeFolderData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostDataTypeFolderError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type/folder',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteDataTypeFolderById<ThrowOnError extends boolean = false>(options: Options<DeleteDataTypeFolderByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteDataTypeFolderByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type/folder/{id}',\n            ...options\n        });\n    }\n    \n    public static getDataTypeFolderById<ThrowOnError extends boolean = false>(options: Options<GetDataTypeFolderByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDataTypeFolderByIdResponse, GetDataTypeFolderByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type/folder/{id}',\n            ...options\n        });\n    }\n    \n    public static putDataTypeFolderById<ThrowOnError extends boolean = false>(options: Options<PutDataTypeFolderByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDataTypeFolderByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/data-type/folder/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getFilterDataType<ThrowOnError extends boolean = false>(options?: Options<GetFilterDataTypeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetFilterDataTypeResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/filter/data-type',\n            ...options\n        });\n    }\n    \n    public static getItemDataType<ThrowOnError extends boolean = false>(options?: Options<GetItemDataTypeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemDataTypeResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/data-type',\n            ...options\n        });\n    }\n    \n    public static getItemDataTypeSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemDataTypeSearchData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemDataTypeSearchResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/data-type/search',\n            ...options\n        });\n    }\n    \n    public static getTreeDataTypeAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeDataTypeAncestorsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDataTypeAncestorsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/data-type/ancestors',\n            ...options\n        });\n    }\n    \n    public static getTreeDataTypeChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeDataTypeChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDataTypeChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/data-type/children',\n            ...options\n        });\n    }\n    \n    public static getTreeDataTypeRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeDataTypeRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDataTypeRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/data-type/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class DictionaryService {\n    public static getDictionary<ThrowOnError extends boolean = false>(options?: Options<GetDictionaryData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetDictionaryResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/dictionary',\n            ...options\n        });\n    }\n    \n    public static postDictionary<ThrowOnError extends boolean = false>(options?: Options<PostDictionaryData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostDictionaryError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/dictionary',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteDictionaryById<ThrowOnError extends boolean = false>(options: Options<DeleteDictionaryByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteDictionaryByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/dictionary/{id}',\n            ...options\n        });\n    }\n    \n    public static getDictionaryById<ThrowOnError extends boolean = false>(options: Options<GetDictionaryByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDictionaryByIdResponse, GetDictionaryByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/dictionary/{id}',\n            ...options\n        });\n    }\n    \n    public static putDictionaryById<ThrowOnError extends boolean = false>(options: Options<PutDictionaryByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDictionaryByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/dictionary/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDictionaryByIdExport<ThrowOnError extends boolean = false>(options: Options<GetDictionaryByIdExportData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDictionaryByIdExportResponse, GetDictionaryByIdExportError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/dictionary/{id}/export',\n            ...options\n        });\n    }\n    \n    public static putDictionaryByIdMove<ThrowOnError extends boolean = false>(options: Options<PutDictionaryByIdMoveData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDictionaryByIdMoveError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/dictionary/{id}/move',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postDictionaryImport<ThrowOnError extends boolean = false>(options?: Options<PostDictionaryImportData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostDictionaryImportError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/dictionary/import',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getItemDictionary<ThrowOnError extends boolean = false>(options?: Options<GetItemDictionaryData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemDictionaryResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/dictionary',\n            ...options\n        });\n    }\n    \n    public static getTreeDictionaryAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeDictionaryAncestorsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDictionaryAncestorsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/dictionary/ancestors',\n            ...options\n        });\n    }\n    \n    public static getTreeDictionaryChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeDictionaryChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDictionaryChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/dictionary/children',\n            ...options\n        });\n    }\n    \n    public static getTreeDictionaryRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeDictionaryRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDictionaryRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/dictionary/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class DocumentBlueprintService {\n    public static postDocumentBlueprint<ThrowOnError extends boolean = false>(options?: Options<PostDocumentBlueprintData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostDocumentBlueprintError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-blueprint',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteDocumentBlueprintById<ThrowOnError extends boolean = false>(options: Options<DeleteDocumentBlueprintByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteDocumentBlueprintByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-blueprint/{id}',\n            ...options\n        });\n    }\n    \n    public static getDocumentBlueprintById<ThrowOnError extends boolean = false>(options: Options<GetDocumentBlueprintByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentBlueprintByIdResponse, GetDocumentBlueprintByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-blueprint/{id}',\n            ...options\n        });\n    }\n    \n    public static putDocumentBlueprintById<ThrowOnError extends boolean = false>(options: Options<PutDocumentBlueprintByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentBlueprintByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-blueprint/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putDocumentBlueprintByIdMove<ThrowOnError extends boolean = false>(options: Options<PutDocumentBlueprintByIdMoveData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentBlueprintByIdMoveError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-blueprint/{id}/move',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDocumentBlueprintByIdScaffold<ThrowOnError extends boolean = false>(options: Options<GetDocumentBlueprintByIdScaffoldData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentBlueprintByIdScaffoldResponse, GetDocumentBlueprintByIdScaffoldError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-blueprint/{id}/scaffold',\n            ...options\n        });\n    }\n    \n    public static postDocumentBlueprintFolder<ThrowOnError extends boolean = false>(options?: Options<PostDocumentBlueprintFolderData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostDocumentBlueprintFolderError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-blueprint/folder',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteDocumentBlueprintFolderById<ThrowOnError extends boolean = false>(options: Options<DeleteDocumentBlueprintFolderByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteDocumentBlueprintFolderByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-blueprint/folder/{id}',\n            ...options\n        });\n    }\n    \n    public static getDocumentBlueprintFolderById<ThrowOnError extends boolean = false>(options: Options<GetDocumentBlueprintFolderByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentBlueprintFolderByIdResponse, GetDocumentBlueprintFolderByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-blueprint/folder/{id}',\n            ...options\n        });\n    }\n    \n    public static putDocumentBlueprintFolderById<ThrowOnError extends boolean = false>(options: Options<PutDocumentBlueprintFolderByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentBlueprintFolderByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-blueprint/folder/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postDocumentBlueprintFromDocument<ThrowOnError extends boolean = false>(options?: Options<PostDocumentBlueprintFromDocumentData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostDocumentBlueprintFromDocumentError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-blueprint/from-document',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getItemDocumentBlueprint<ThrowOnError extends boolean = false>(options?: Options<GetItemDocumentBlueprintData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemDocumentBlueprintResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/document-blueprint',\n            ...options\n        });\n    }\n    \n    public static getTreeDocumentBlueprintAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentBlueprintAncestorsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDocumentBlueprintAncestorsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/document-blueprint/ancestors',\n            ...options\n        });\n    }\n    \n    public static getTreeDocumentBlueprintChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentBlueprintChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDocumentBlueprintChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/document-blueprint/children',\n            ...options\n        });\n    }\n    \n    public static getTreeDocumentBlueprintRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentBlueprintRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDocumentBlueprintRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/document-blueprint/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class DocumentTypeService {\n    public static postDocumentType<ThrowOnError extends boolean = false>(options?: Options<PostDocumentTypeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostDocumentTypeError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteDocumentTypeById<ThrowOnError extends boolean = false>(options: Options<DeleteDocumentTypeByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteDocumentTypeByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/{id}',\n            ...options\n        });\n    }\n    \n    public static getDocumentTypeById<ThrowOnError extends boolean = false>(options: Options<GetDocumentTypeByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentTypeByIdResponse, GetDocumentTypeByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/{id}',\n            ...options\n        });\n    }\n    \n    public static putDocumentTypeById<ThrowOnError extends boolean = false>(options: Options<PutDocumentTypeByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentTypeByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDocumentTypeByIdAllowedChildren<ThrowOnError extends boolean = false>(options: Options<GetDocumentTypeByIdAllowedChildrenData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentTypeByIdAllowedChildrenResponse, GetDocumentTypeByIdAllowedChildrenError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/{id}/allowed-children',\n            ...options\n        });\n    }\n    \n    public static getDocumentTypeByIdBlueprint<ThrowOnError extends boolean = false>(options: Options<GetDocumentTypeByIdBlueprintData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentTypeByIdBlueprintResponse, GetDocumentTypeByIdBlueprintError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/{id}/blueprint',\n            ...options\n        });\n    }\n    \n    public static getDocumentTypeByIdCompositionReferences<ThrowOnError extends boolean = false>(options: Options<GetDocumentTypeByIdCompositionReferencesData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentTypeByIdCompositionReferencesResponse, GetDocumentTypeByIdCompositionReferencesError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/{id}/composition-references',\n            ...options\n        });\n    }\n    \n    public static postDocumentTypeByIdCopy<ThrowOnError extends boolean = false>(options: Options<PostDocumentTypeByIdCopyData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<unknown, PostDocumentTypeByIdCopyError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/{id}/copy',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDocumentTypeByIdExport<ThrowOnError extends boolean = false>(options: Options<GetDocumentTypeByIdExportData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentTypeByIdExportResponse, GetDocumentTypeByIdExportError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/{id}/export',\n            ...options\n        });\n    }\n    \n    public static putDocumentTypeByIdImport<ThrowOnError extends boolean = false>(options: Options<PutDocumentTypeByIdImportData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentTypeByIdImportError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/{id}/import',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putDocumentTypeByIdMove<ThrowOnError extends boolean = false>(options: Options<PutDocumentTypeByIdMoveData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentTypeByIdMoveError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/{id}/move',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDocumentTypeAllowedAtRoot<ThrowOnError extends boolean = false>(options?: Options<GetDocumentTypeAllowedAtRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetDocumentTypeAllowedAtRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/allowed-at-root',\n            ...options\n        });\n    }\n    \n    public static postDocumentTypeAvailableCompositions<ThrowOnError extends boolean = false>(options?: Options<PostDocumentTypeAvailableCompositionsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<PostDocumentTypeAvailableCompositionsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/available-compositions',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDocumentTypeConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetDocumentTypeConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetDocumentTypeConfigurationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/configuration',\n            ...options\n        });\n    }\n    \n    public static postDocumentTypeFolder<ThrowOnError extends boolean = false>(options?: Options<PostDocumentTypeFolderData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostDocumentTypeFolderError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/folder',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteDocumentTypeFolderById<ThrowOnError extends boolean = false>(options: Options<DeleteDocumentTypeFolderByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteDocumentTypeFolderByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/folder/{id}',\n            ...options\n        });\n    }\n    \n    public static getDocumentTypeFolderById<ThrowOnError extends boolean = false>(options: Options<GetDocumentTypeFolderByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentTypeFolderByIdResponse, GetDocumentTypeFolderByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/folder/{id}',\n            ...options\n        });\n    }\n    \n    public static putDocumentTypeFolderById<ThrowOnError extends boolean = false>(options: Options<PutDocumentTypeFolderByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentTypeFolderByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/folder/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postDocumentTypeImport<ThrowOnError extends boolean = false>(options?: Options<PostDocumentTypeImportData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostDocumentTypeImportError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-type/import',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getItemDocumentType<ThrowOnError extends boolean = false>(options?: Options<GetItemDocumentTypeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemDocumentTypeResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/document-type',\n            ...options\n        });\n    }\n    \n    public static getItemDocumentTypeSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemDocumentTypeSearchData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemDocumentTypeSearchResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/document-type/search',\n            ...options\n        });\n    }\n    \n    public static getTreeDocumentTypeAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentTypeAncestorsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDocumentTypeAncestorsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/document-type/ancestors',\n            ...options\n        });\n    }\n    \n    public static getTreeDocumentTypeChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentTypeChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDocumentTypeChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/document-type/children',\n            ...options\n        });\n    }\n    \n    public static getTreeDocumentTypeRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentTypeRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDocumentTypeRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/document-type/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class DocumentVersionService {\n    public static getDocumentVersion<ThrowOnError extends boolean = false>(options: Options<GetDocumentVersionData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentVersionResponse, GetDocumentVersionError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-version',\n            ...options\n        });\n    }\n    \n    public static getDocumentVersionById<ThrowOnError extends boolean = false>(options: Options<GetDocumentVersionByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentVersionByIdResponse, GetDocumentVersionByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-version/{id}',\n            ...options\n        });\n    }\n    \n    public static putDocumentVersionByIdPreventCleanup<ThrowOnError extends boolean = false>(options: Options<PutDocumentVersionByIdPreventCleanupData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentVersionByIdPreventCleanupError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-version/{id}/prevent-cleanup',\n            ...options\n        });\n    }\n    \n    public static postDocumentVersionByIdRollback<ThrowOnError extends boolean = false>(options: Options<PostDocumentVersionByIdRollbackData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<unknown, PostDocumentVersionByIdRollbackError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document-version/{id}/rollback',\n            ...options\n        });\n    }\n    \n}\n\nexport class DocumentService {\n    public static getCollectionDocumentById<ThrowOnError extends boolean = false>(options: Options<GetCollectionDocumentByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetCollectionDocumentByIdResponse, GetCollectionDocumentByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/collection/document/{id}',\n            ...options\n        });\n    }\n    \n    public static postDocument<ThrowOnError extends boolean = false>(options?: Options<PostDocumentData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostDocumentError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteDocumentById<ThrowOnError extends boolean = false>(options: Options<DeleteDocumentByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteDocumentByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}',\n            ...options\n        });\n    }\n    \n    public static getDocumentById<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentByIdResponse, GetDocumentByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}',\n            ...options\n        });\n    }\n    \n    public static putDocumentById<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDocumentByIdAuditLog<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdAuditLogData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentByIdAuditLogResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/audit-log',\n            ...options\n        });\n    }\n    \n    public static postDocumentByIdCopy<ThrowOnError extends boolean = false>(options: Options<PostDocumentByIdCopyData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<unknown, PostDocumentByIdCopyError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/copy',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDocumentByIdDomains<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdDomainsData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentByIdDomainsResponse, GetDocumentByIdDomainsError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/domains',\n            ...options\n        });\n    }\n    \n    public static putDocumentByIdDomains<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdDomainsData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentByIdDomainsError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/domains',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putDocumentByIdMove<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdMoveData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentByIdMoveError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/move',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putDocumentByIdMoveToRecycleBin<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdMoveToRecycleBinData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentByIdMoveToRecycleBinError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/move-to-recycle-bin',\n            ...options\n        });\n    }\n    \n    public static getDocumentByIdNotifications<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdNotificationsData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentByIdNotificationsResponse, GetDocumentByIdNotificationsError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/notifications',\n            ...options\n        });\n    }\n    \n    public static putDocumentByIdNotifications<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdNotificationsData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentByIdNotificationsError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/notifications',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteDocumentByIdPublicAccess<ThrowOnError extends boolean = false>(options: Options<DeleteDocumentByIdPublicAccessData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteDocumentByIdPublicAccessError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/public-access',\n            ...options\n        });\n    }\n    \n    public static getDocumentByIdPublicAccess<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdPublicAccessData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentByIdPublicAccessResponse, GetDocumentByIdPublicAccessError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/public-access',\n            ...options\n        });\n    }\n    \n    public static postDocumentByIdPublicAccess<ThrowOnError extends boolean = false>(options: Options<PostDocumentByIdPublicAccessData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<unknown, PostDocumentByIdPublicAccessError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/public-access',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putDocumentByIdPublicAccess<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdPublicAccessData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentByIdPublicAccessError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/public-access',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putDocumentByIdPublish<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdPublishData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentByIdPublishError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/publish',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putDocumentByIdPublishWithDescendants<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdPublishWithDescendantsData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<PutDocumentByIdPublishWithDescendantsResponse, PutDocumentByIdPublishWithDescendantsError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/publish-with-descendants',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDocumentByIdPublishWithDescendantsResultByTaskId<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdPublishWithDescendantsResultByTaskIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentByIdPublishWithDescendantsResultByTaskIdResponse, GetDocumentByIdPublishWithDescendantsResultByTaskIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/publish-with-descendants/result/{taskId}',\n            ...options\n        });\n    }\n    \n    public static getDocumentByIdPublished<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdPublishedData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentByIdPublishedResponse, GetDocumentByIdPublishedError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/published',\n            ...options\n        });\n    }\n    \n    public static getDocumentByIdReferencedBy<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdReferencedByData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentByIdReferencedByResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/referenced-by',\n            ...options\n        });\n    }\n    \n    public static getDocumentByIdReferencedDescendants<ThrowOnError extends boolean = false>(options: Options<GetDocumentByIdReferencedDescendantsData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetDocumentByIdReferencedDescendantsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/referenced-descendants',\n            ...options\n        });\n    }\n    \n    public static putDocumentByIdUnpublish<ThrowOnError extends boolean = false>(options: Options<PutDocumentByIdUnpublishData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutDocumentByIdUnpublishError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/{id}/unpublish',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putUmbracoManagementApiV11DocumentByIdValidate11<ThrowOnError extends boolean = false>(options: Options<PutUmbracoManagementApiV11DocumentByIdValidate11Data, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutUmbracoManagementApiV11DocumentByIdValidate11Error, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1.1/document/{id}/validate',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDocumentAreReferenced<ThrowOnError extends boolean = false>(options?: Options<GetDocumentAreReferencedData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetDocumentAreReferencedResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/are-referenced',\n            ...options\n        });\n    }\n    \n    public static getDocumentConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetDocumentConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetDocumentConfigurationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/configuration',\n            ...options\n        });\n    }\n    \n    public static putDocumentSort<ThrowOnError extends boolean = false>(options?: Options<PutDocumentSortData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).put<unknown, PutDocumentSortError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/sort',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDocumentUrls<ThrowOnError extends boolean = false>(options?: Options<GetDocumentUrlsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetDocumentUrlsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/urls',\n            ...options\n        });\n    }\n    \n    public static postDocumentValidate<ThrowOnError extends boolean = false>(options?: Options<PostDocumentValidateData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostDocumentValidateError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/document/validate',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getItemDocument<ThrowOnError extends boolean = false>(options?: Options<GetItemDocumentData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemDocumentResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/document',\n            ...options\n        });\n    }\n    \n    public static getItemDocumentSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemDocumentSearchData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemDocumentSearchResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/document/search',\n            ...options\n        });\n    }\n    \n    public static deleteRecycleBinDocument<ThrowOnError extends boolean = false>(options?: Options<DeleteRecycleBinDocumentData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).delete<unknown, DeleteRecycleBinDocumentError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/document',\n            ...options\n        });\n    }\n    \n    public static deleteRecycleBinDocumentById<ThrowOnError extends boolean = false>(options: Options<DeleteRecycleBinDocumentByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteRecycleBinDocumentByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/document/{id}',\n            ...options\n        });\n    }\n    \n    public static getRecycleBinDocumentByIdOriginalParent<ThrowOnError extends boolean = false>(options: Options<GetRecycleBinDocumentByIdOriginalParentData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetRecycleBinDocumentByIdOriginalParentResponse, GetRecycleBinDocumentByIdOriginalParentError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/document/{id}/original-parent',\n            ...options\n        });\n    }\n    \n    public static putRecycleBinDocumentByIdRestore<ThrowOnError extends boolean = false>(options: Options<PutRecycleBinDocumentByIdRestoreData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutRecycleBinDocumentByIdRestoreError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/document/{id}/restore',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getRecycleBinDocumentChildren<ThrowOnError extends boolean = false>(options?: Options<GetRecycleBinDocumentChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetRecycleBinDocumentChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/document/children',\n            ...options\n        });\n    }\n    \n    public static getRecycleBinDocumentReferencedBy<ThrowOnError extends boolean = false>(options?: Options<GetRecycleBinDocumentReferencedByData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetRecycleBinDocumentReferencedByResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/document/referenced-by',\n            ...options\n        });\n    }\n    \n    public static getRecycleBinDocumentRoot<ThrowOnError extends boolean = false>(options?: Options<GetRecycleBinDocumentRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetRecycleBinDocumentRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/document/root',\n            ...options\n        });\n    }\n    \n    public static getTreeDocumentAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentAncestorsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDocumentAncestorsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/document/ancestors',\n            ...options\n        });\n    }\n    \n    public static getTreeDocumentChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDocumentChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/document/children',\n            ...options\n        });\n    }\n    \n    public static getTreeDocumentRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeDocumentRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeDocumentRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/document/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class DynamicRootService {\n    public static postDynamicRootQuery<ThrowOnError extends boolean = false>(options?: Options<PostDynamicRootQueryData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<PostDynamicRootQueryResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/dynamic-root/query',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getDynamicRootSteps<ThrowOnError extends boolean = false>(options?: Options<GetDynamicRootStepsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetDynamicRootStepsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/dynamic-root/steps',\n            ...options\n        });\n    }\n    \n}\n\nexport class HealthCheckService {\n    public static getHealthCheckGroup<ThrowOnError extends boolean = false>(options?: Options<GetHealthCheckGroupData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetHealthCheckGroupResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/health-check-group',\n            ...options\n        });\n    }\n    \n    public static getHealthCheckGroupByName<ThrowOnError extends boolean = false>(options: Options<GetHealthCheckGroupByNameData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetHealthCheckGroupByNameResponse, GetHealthCheckGroupByNameError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/health-check-group/{name}',\n            ...options\n        });\n    }\n    \n    public static postHealthCheckGroupByNameCheck<ThrowOnError extends boolean = false>(options: Options<PostHealthCheckGroupByNameCheckData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<PostHealthCheckGroupByNameCheckResponse, PostHealthCheckGroupByNameCheckError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/health-check-group/{name}/check',\n            ...options\n        });\n    }\n    \n    public static postHealthCheckExecuteAction<ThrowOnError extends boolean = false>(options?: Options<PostHealthCheckExecuteActionData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<PostHealthCheckExecuteActionResponse, PostHealthCheckExecuteActionError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/health-check/execute-action',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n}\n\nexport class HelpService {\n    public static getHelp<ThrowOnError extends boolean = false>(options?: Options<GetHelpData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetHelpResponse, GetHelpError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/help',\n            ...options\n        });\n    }\n    \n}\n\nexport class ImagingService {\n    public static getImagingResizeUrls<ThrowOnError extends boolean = false>(options?: Options<GetImagingResizeUrlsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetImagingResizeUrlsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/imaging/resize/urls',\n            ...options\n        });\n    }\n    \n}\n\nexport class ImportService {\n    public static getImportAnalyze<ThrowOnError extends boolean = false>(options?: Options<GetImportAnalyzeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetImportAnalyzeResponse, GetImportAnalyzeError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/import/analyze',\n            ...options\n        });\n    }\n    \n}\n\nexport class IndexerService {\n    public static getIndexer<ThrowOnError extends boolean = false>(options?: Options<GetIndexerData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetIndexerResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/indexer',\n            ...options\n        });\n    }\n    \n    public static getIndexerByIndexName<ThrowOnError extends boolean = false>(options: Options<GetIndexerByIndexNameData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetIndexerByIndexNameResponse, GetIndexerByIndexNameError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/indexer/{indexName}',\n            ...options\n        });\n    }\n    \n    public static postIndexerByIndexNameRebuild<ThrowOnError extends boolean = false>(options: Options<PostIndexerByIndexNameRebuildData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<unknown, PostIndexerByIndexNameRebuildError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/indexer/{indexName}/rebuild',\n            ...options\n        });\n    }\n    \n}\n\nexport class InstallService {\n    public static getInstallSettings<ThrowOnError extends boolean = false>(options?: Options<GetInstallSettingsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetInstallSettingsResponse, GetInstallSettingsError, ThrowOnError>({\n            url: '/umbraco/management/api/v1/install/settings',\n            ...options\n        });\n    }\n    \n    public static postInstallSetup<ThrowOnError extends boolean = false>(options?: Options<PostInstallSetupData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostInstallSetupError, ThrowOnError>({\n            url: '/umbraco/management/api/v1/install/setup',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postInstallValidateDatabase<ThrowOnError extends boolean = false>(options?: Options<PostInstallValidateDatabaseData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostInstallValidateDatabaseError, ThrowOnError>({\n            url: '/umbraco/management/api/v1/install/validate-database',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n}\n\nexport class LanguageService {\n    public static getItemLanguage<ThrowOnError extends boolean = false>(options?: Options<GetItemLanguageData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemLanguageResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/language',\n            ...options\n        });\n    }\n    \n    public static getItemLanguageDefault<ThrowOnError extends boolean = false>(options?: Options<GetItemLanguageDefaultData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemLanguageDefaultResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/language/default',\n            ...options\n        });\n    }\n    \n    public static getLanguage<ThrowOnError extends boolean = false>(options?: Options<GetLanguageData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetLanguageResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/language',\n            ...options\n        });\n    }\n    \n    public static postLanguage<ThrowOnError extends boolean = false>(options?: Options<PostLanguageData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostLanguageError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/language',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteLanguageByIsoCode<ThrowOnError extends boolean = false>(options: Options<DeleteLanguageByIsoCodeData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteLanguageByIsoCodeError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/language/{isoCode}',\n            ...options\n        });\n    }\n    \n    public static getLanguageByIsoCode<ThrowOnError extends boolean = false>(options: Options<GetLanguageByIsoCodeData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetLanguageByIsoCodeResponse, GetLanguageByIsoCodeError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/language/{isoCode}',\n            ...options\n        });\n    }\n    \n    public static putLanguageByIsoCode<ThrowOnError extends boolean = false>(options: Options<PutLanguageByIsoCodeData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutLanguageByIsoCodeError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/language/{isoCode}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n}\n\nexport class LogViewerService {\n    public static getLogViewerLevel<ThrowOnError extends boolean = false>(options?: Options<GetLogViewerLevelData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetLogViewerLevelResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/log-viewer/level',\n            ...options\n        });\n    }\n    \n    public static getLogViewerLevelCount<ThrowOnError extends boolean = false>(options?: Options<GetLogViewerLevelCountData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetLogViewerLevelCountResponse, GetLogViewerLevelCountError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/log-viewer/level-count',\n            ...options\n        });\n    }\n    \n    public static getLogViewerLog<ThrowOnError extends boolean = false>(options?: Options<GetLogViewerLogData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetLogViewerLogResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/log-viewer/log',\n            ...options\n        });\n    }\n    \n    public static getLogViewerMessageTemplate<ThrowOnError extends boolean = false>(options?: Options<GetLogViewerMessageTemplateData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetLogViewerMessageTemplateResponse, GetLogViewerMessageTemplateError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/log-viewer/message-template',\n            ...options\n        });\n    }\n    \n    public static getLogViewerSavedSearch<ThrowOnError extends boolean = false>(options?: Options<GetLogViewerSavedSearchData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetLogViewerSavedSearchResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/log-viewer/saved-search',\n            ...options\n        });\n    }\n    \n    public static postLogViewerSavedSearch<ThrowOnError extends boolean = false>(options?: Options<PostLogViewerSavedSearchData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostLogViewerSavedSearchError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/log-viewer/saved-search',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteLogViewerSavedSearchByName<ThrowOnError extends boolean = false>(options: Options<DeleteLogViewerSavedSearchByNameData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteLogViewerSavedSearchByNameError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/log-viewer/saved-search/{name}',\n            ...options\n        });\n    }\n    \n    public static getLogViewerSavedSearchByName<ThrowOnError extends boolean = false>(options: Options<GetLogViewerSavedSearchByNameData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetLogViewerSavedSearchByNameResponse, GetLogViewerSavedSearchByNameError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/log-viewer/saved-search/{name}',\n            ...options\n        });\n    }\n    \n    public static getLogViewerValidateLogsSize<ThrowOnError extends boolean = false>(options?: Options<GetLogViewerValidateLogsSizeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<unknown, GetLogViewerValidateLogsSizeError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/log-viewer/validate-logs-size',\n            ...options\n        });\n    }\n    \n}\n\nexport class ManifestService {\n    public static getManifestManifest<ThrowOnError extends boolean = false>(options?: Options<GetManifestManifestData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetManifestManifestResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/manifest/manifest',\n            ...options\n        });\n    }\n    \n    public static getManifestManifestPrivate<ThrowOnError extends boolean = false>(options?: Options<GetManifestManifestPrivateData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetManifestManifestPrivateResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/manifest/manifest/private',\n            ...options\n        });\n    }\n    \n    public static getManifestManifestPublic<ThrowOnError extends boolean = false>(options?: Options<GetManifestManifestPublicData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetManifestManifestPublicResponse, unknown, ThrowOnError>({\n            url: '/umbraco/management/api/v1/manifest/manifest/public',\n            ...options\n        });\n    }\n    \n}\n\nexport class MediaTypeService {\n    public static getItemMediaType<ThrowOnError extends boolean = false>(options?: Options<GetItemMediaTypeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemMediaTypeResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/media-type',\n            ...options\n        });\n    }\n    \n    public static getItemMediaTypeAllowed<ThrowOnError extends boolean = false>(options?: Options<GetItemMediaTypeAllowedData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemMediaTypeAllowedResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/media-type/allowed',\n            ...options\n        });\n    }\n    \n    public static getItemMediaTypeFolders<ThrowOnError extends boolean = false>(options?: Options<GetItemMediaTypeFoldersData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemMediaTypeFoldersResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/media-type/folders',\n            ...options\n        });\n    }\n    \n    public static getItemMediaTypeSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemMediaTypeSearchData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemMediaTypeSearchResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/media-type/search',\n            ...options\n        });\n    }\n    \n    public static postMediaType<ThrowOnError extends boolean = false>(options?: Options<PostMediaTypeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostMediaTypeError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteMediaTypeById<ThrowOnError extends boolean = false>(options: Options<DeleteMediaTypeByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteMediaTypeByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/{id}',\n            ...options\n        });\n    }\n    \n    public static getMediaTypeById<ThrowOnError extends boolean = false>(options: Options<GetMediaTypeByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMediaTypeByIdResponse, GetMediaTypeByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/{id}',\n            ...options\n        });\n    }\n    \n    public static putMediaTypeById<ThrowOnError extends boolean = false>(options: Options<PutMediaTypeByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutMediaTypeByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getMediaTypeByIdAllowedChildren<ThrowOnError extends boolean = false>(options: Options<GetMediaTypeByIdAllowedChildrenData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMediaTypeByIdAllowedChildrenResponse, GetMediaTypeByIdAllowedChildrenError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/{id}/allowed-children',\n            ...options\n        });\n    }\n    \n    public static getMediaTypeByIdCompositionReferences<ThrowOnError extends boolean = false>(options: Options<GetMediaTypeByIdCompositionReferencesData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMediaTypeByIdCompositionReferencesResponse, GetMediaTypeByIdCompositionReferencesError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/{id}/composition-references',\n            ...options\n        });\n    }\n    \n    public static postMediaTypeByIdCopy<ThrowOnError extends boolean = false>(options: Options<PostMediaTypeByIdCopyData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<unknown, PostMediaTypeByIdCopyError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/{id}/copy',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getMediaTypeByIdExport<ThrowOnError extends boolean = false>(options: Options<GetMediaTypeByIdExportData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMediaTypeByIdExportResponse, GetMediaTypeByIdExportError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/{id}/export',\n            ...options\n        });\n    }\n    \n    public static putMediaTypeByIdImport<ThrowOnError extends boolean = false>(options: Options<PutMediaTypeByIdImportData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutMediaTypeByIdImportError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/{id}/import',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putMediaTypeByIdMove<ThrowOnError extends boolean = false>(options: Options<PutMediaTypeByIdMoveData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutMediaTypeByIdMoveError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/{id}/move',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getMediaTypeAllowedAtRoot<ThrowOnError extends boolean = false>(options?: Options<GetMediaTypeAllowedAtRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetMediaTypeAllowedAtRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/allowed-at-root',\n            ...options\n        });\n    }\n    \n    public static postMediaTypeAvailableCompositions<ThrowOnError extends boolean = false>(options?: Options<PostMediaTypeAvailableCompositionsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<PostMediaTypeAvailableCompositionsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/available-compositions',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getMediaTypeConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetMediaTypeConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetMediaTypeConfigurationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/configuration',\n            ...options\n        });\n    }\n    \n    public static postMediaTypeFolder<ThrowOnError extends boolean = false>(options?: Options<PostMediaTypeFolderData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostMediaTypeFolderError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/folder',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteMediaTypeFolderById<ThrowOnError extends boolean = false>(options: Options<DeleteMediaTypeFolderByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteMediaTypeFolderByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/folder/{id}',\n            ...options\n        });\n    }\n    \n    public static getMediaTypeFolderById<ThrowOnError extends boolean = false>(options: Options<GetMediaTypeFolderByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMediaTypeFolderByIdResponse, GetMediaTypeFolderByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/folder/{id}',\n            ...options\n        });\n    }\n    \n    public static putMediaTypeFolderById<ThrowOnError extends boolean = false>(options: Options<PutMediaTypeFolderByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutMediaTypeFolderByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/folder/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postMediaTypeImport<ThrowOnError extends boolean = false>(options?: Options<PostMediaTypeImportData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostMediaTypeImportError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media-type/import',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getTreeMediaTypeAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeMediaTypeAncestorsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeMediaTypeAncestorsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/media-type/ancestors',\n            ...options\n        });\n    }\n    \n    public static getTreeMediaTypeChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeMediaTypeChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeMediaTypeChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/media-type/children',\n            ...options\n        });\n    }\n    \n    public static getTreeMediaTypeRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeMediaTypeRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeMediaTypeRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/media-type/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class MediaService {\n    public static getCollectionMedia<ThrowOnError extends boolean = false>(options?: Options<GetCollectionMediaData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetCollectionMediaResponse, GetCollectionMediaError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/collection/media',\n            ...options\n        });\n    }\n    \n    public static getItemMedia<ThrowOnError extends boolean = false>(options?: Options<GetItemMediaData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemMediaResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/media',\n            ...options\n        });\n    }\n    \n    public static getItemMediaSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemMediaSearchData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemMediaSearchResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/media/search',\n            ...options\n        });\n    }\n    \n    public static postMedia<ThrowOnError extends boolean = false>(options?: Options<PostMediaData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostMediaError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteMediaById<ThrowOnError extends boolean = false>(options: Options<DeleteMediaByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteMediaByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/{id}',\n            ...options\n        });\n    }\n    \n    public static getMediaById<ThrowOnError extends boolean = false>(options: Options<GetMediaByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMediaByIdResponse, GetMediaByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/{id}',\n            ...options\n        });\n    }\n    \n    public static putMediaById<ThrowOnError extends boolean = false>(options: Options<PutMediaByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutMediaByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getMediaByIdAuditLog<ThrowOnError extends boolean = false>(options: Options<GetMediaByIdAuditLogData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMediaByIdAuditLogResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/{id}/audit-log',\n            ...options\n        });\n    }\n    \n    public static putMediaByIdMove<ThrowOnError extends boolean = false>(options: Options<PutMediaByIdMoveData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutMediaByIdMoveError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/{id}/move',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putMediaByIdMoveToRecycleBin<ThrowOnError extends boolean = false>(options: Options<PutMediaByIdMoveToRecycleBinData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutMediaByIdMoveToRecycleBinError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/{id}/move-to-recycle-bin',\n            ...options\n        });\n    }\n    \n    public static getMediaByIdReferencedBy<ThrowOnError extends boolean = false>(options: Options<GetMediaByIdReferencedByData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMediaByIdReferencedByResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/{id}/referenced-by',\n            ...options\n        });\n    }\n    \n    public static getMediaByIdReferencedDescendants<ThrowOnError extends boolean = false>(options: Options<GetMediaByIdReferencedDescendantsData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMediaByIdReferencedDescendantsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/{id}/referenced-descendants',\n            ...options\n        });\n    }\n    \n    public static putMediaByIdValidate<ThrowOnError extends boolean = false>(options: Options<PutMediaByIdValidateData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutMediaByIdValidateError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/{id}/validate',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getMediaAreReferenced<ThrowOnError extends boolean = false>(options?: Options<GetMediaAreReferencedData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetMediaAreReferencedResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/are-referenced',\n            ...options\n        });\n    }\n    \n    /**\n     * @deprecated\n     */\n    public static getMediaConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetMediaConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetMediaConfigurationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/configuration',\n            ...options\n        });\n    }\n    \n    public static putMediaSort<ThrowOnError extends boolean = false>(options?: Options<PutMediaSortData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).put<unknown, PutMediaSortError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/sort',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getMediaUrls<ThrowOnError extends boolean = false>(options?: Options<GetMediaUrlsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetMediaUrlsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/urls',\n            ...options\n        });\n    }\n    \n    public static postMediaValidate<ThrowOnError extends boolean = false>(options?: Options<PostMediaValidateData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostMediaValidateError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/media/validate',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteRecycleBinMedia<ThrowOnError extends boolean = false>(options?: Options<DeleteRecycleBinMediaData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).delete<unknown, DeleteRecycleBinMediaError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/media',\n            ...options\n        });\n    }\n    \n    public static deleteRecycleBinMediaById<ThrowOnError extends boolean = false>(options: Options<DeleteRecycleBinMediaByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteRecycleBinMediaByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/media/{id}',\n            ...options\n        });\n    }\n    \n    public static getRecycleBinMediaByIdOriginalParent<ThrowOnError extends boolean = false>(options: Options<GetRecycleBinMediaByIdOriginalParentData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetRecycleBinMediaByIdOriginalParentResponse, GetRecycleBinMediaByIdOriginalParentError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/media/{id}/original-parent',\n            ...options\n        });\n    }\n    \n    public static putRecycleBinMediaByIdRestore<ThrowOnError extends boolean = false>(options: Options<PutRecycleBinMediaByIdRestoreData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutRecycleBinMediaByIdRestoreError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/media/{id}/restore',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getRecycleBinMediaChildren<ThrowOnError extends boolean = false>(options?: Options<GetRecycleBinMediaChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetRecycleBinMediaChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/media/children',\n            ...options\n        });\n    }\n    \n    public static getRecycleBinMediaReferencedBy<ThrowOnError extends boolean = false>(options?: Options<GetRecycleBinMediaReferencedByData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetRecycleBinMediaReferencedByResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/media/referenced-by',\n            ...options\n        });\n    }\n    \n    public static getRecycleBinMediaRoot<ThrowOnError extends boolean = false>(options?: Options<GetRecycleBinMediaRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetRecycleBinMediaRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/recycle-bin/media/root',\n            ...options\n        });\n    }\n    \n    public static getTreeMediaAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeMediaAncestorsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeMediaAncestorsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/media/ancestors',\n            ...options\n        });\n    }\n    \n    public static getTreeMediaChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeMediaChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeMediaChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/media/children',\n            ...options\n        });\n    }\n    \n    public static getTreeMediaRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeMediaRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeMediaRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/media/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class MemberGroupService {\n    public static getItemMemberGroup<ThrowOnError extends boolean = false>(options?: Options<GetItemMemberGroupData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemMemberGroupResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/member-group',\n            ...options\n        });\n    }\n    \n    public static getMemberGroup<ThrowOnError extends boolean = false>(options?: Options<GetMemberGroupData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetMemberGroupResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member-group',\n            ...options\n        });\n    }\n    \n    public static postMemberGroup<ThrowOnError extends boolean = false>(options?: Options<PostMemberGroupData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostMemberGroupError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member-group',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteMemberGroupById<ThrowOnError extends boolean = false>(options: Options<DeleteMemberGroupByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteMemberGroupByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member-group/{id}',\n            ...options\n        });\n    }\n    \n    public static getMemberGroupById<ThrowOnError extends boolean = false>(options: Options<GetMemberGroupByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMemberGroupByIdResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member-group/{id}',\n            ...options\n        });\n    }\n    \n    public static putMemberGroupById<ThrowOnError extends boolean = false>(options: Options<PutMemberGroupByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutMemberGroupByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member-group/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getTreeMemberGroupRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeMemberGroupRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeMemberGroupRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/member-group/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class MemberTypeService {\n    public static getItemMemberType<ThrowOnError extends boolean = false>(options?: Options<GetItemMemberTypeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemMemberTypeResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/member-type',\n            ...options\n        });\n    }\n    \n    public static getItemMemberTypeSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemMemberTypeSearchData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemMemberTypeSearchResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/member-type/search',\n            ...options\n        });\n    }\n    \n    public static postMemberType<ThrowOnError extends boolean = false>(options?: Options<PostMemberTypeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostMemberTypeError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member-type',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteMemberTypeById<ThrowOnError extends boolean = false>(options: Options<DeleteMemberTypeByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteMemberTypeByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member-type/{id}',\n            ...options\n        });\n    }\n    \n    public static getMemberTypeById<ThrowOnError extends boolean = false>(options: Options<GetMemberTypeByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMemberTypeByIdResponse, GetMemberTypeByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member-type/{id}',\n            ...options\n        });\n    }\n    \n    public static putMemberTypeById<ThrowOnError extends boolean = false>(options: Options<PutMemberTypeByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutMemberTypeByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member-type/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getMemberTypeByIdCompositionReferences<ThrowOnError extends boolean = false>(options: Options<GetMemberTypeByIdCompositionReferencesData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMemberTypeByIdCompositionReferencesResponse, GetMemberTypeByIdCompositionReferencesError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member-type/{id}/composition-references',\n            ...options\n        });\n    }\n    \n    public static postMemberTypeByIdCopy<ThrowOnError extends boolean = false>(options: Options<PostMemberTypeByIdCopyData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<unknown, PostMemberTypeByIdCopyError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member-type/{id}/copy',\n            ...options\n        });\n    }\n    \n    public static postMemberTypeAvailableCompositions<ThrowOnError extends boolean = false>(options?: Options<PostMemberTypeAvailableCompositionsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<PostMemberTypeAvailableCompositionsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member-type/available-compositions',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getMemberTypeConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetMemberTypeConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetMemberTypeConfigurationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member-type/configuration',\n            ...options\n        });\n    }\n    \n    public static getTreeMemberTypeRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeMemberTypeRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeMemberTypeRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/member-type/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class MemberService {\n    public static getFilterMember<ThrowOnError extends boolean = false>(options?: Options<GetFilterMemberData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetFilterMemberResponse, GetFilterMemberError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/filter/member',\n            ...options\n        });\n    }\n    \n    public static getItemMember<ThrowOnError extends boolean = false>(options?: Options<GetItemMemberData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemMemberResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/member',\n            ...options\n        });\n    }\n    \n    public static getItemMemberSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemMemberSearchData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemMemberSearchResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/member/search',\n            ...options\n        });\n    }\n    \n    public static postMember<ThrowOnError extends boolean = false>(options?: Options<PostMemberData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostMemberError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteMemberById<ThrowOnError extends boolean = false>(options: Options<DeleteMemberByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteMemberByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member/{id}',\n            ...options\n        });\n    }\n    \n    public static getMemberById<ThrowOnError extends boolean = false>(options: Options<GetMemberByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMemberByIdResponse, GetMemberByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member/{id}',\n            ...options\n        });\n    }\n    \n    public static putMemberById<ThrowOnError extends boolean = false>(options: Options<PutMemberByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutMemberByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getMemberByIdReferencedBy<ThrowOnError extends boolean = false>(options: Options<GetMemberByIdReferencedByData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMemberByIdReferencedByResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member/{id}/referenced-by',\n            ...options\n        });\n    }\n    \n    public static getMemberByIdReferencedDescendants<ThrowOnError extends boolean = false>(options: Options<GetMemberByIdReferencedDescendantsData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetMemberByIdReferencedDescendantsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member/{id}/referenced-descendants',\n            ...options\n        });\n    }\n    \n    public static putMemberByIdValidate<ThrowOnError extends boolean = false>(options: Options<PutMemberByIdValidateData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutMemberByIdValidateError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member/{id}/validate',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getMemberAreReferenced<ThrowOnError extends boolean = false>(options?: Options<GetMemberAreReferencedData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetMemberAreReferencedResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member/are-referenced',\n            ...options\n        });\n    }\n    \n    public static getMemberConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetMemberConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetMemberConfigurationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member/configuration',\n            ...options\n        });\n    }\n    \n    public static postMemberValidate<ThrowOnError extends boolean = false>(options?: Options<PostMemberValidateData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostMemberValidateError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/member/validate',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n}\n\nexport class ModelsBuilderService {\n    public static postModelsBuilderBuild<ThrowOnError extends boolean = false>(options?: Options<PostModelsBuilderBuildData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostModelsBuilderBuildError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/models-builder/build',\n            ...options\n        });\n    }\n    \n    public static getModelsBuilderDashboard<ThrowOnError extends boolean = false>(options?: Options<GetModelsBuilderDashboardData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetModelsBuilderDashboardResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/models-builder/dashboard',\n            ...options\n        });\n    }\n    \n    public static getModelsBuilderStatus<ThrowOnError extends boolean = false>(options?: Options<GetModelsBuilderStatusData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetModelsBuilderStatusResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/models-builder/status',\n            ...options\n        });\n    }\n    \n}\n\nexport class ObjectTypesService {\n    public static getObjectTypes<ThrowOnError extends boolean = false>(options?: Options<GetObjectTypesData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetObjectTypesResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/object-types',\n            ...options\n        });\n    }\n    \n}\n\nexport class OEmbedService {\n    public static getOembedQuery<ThrowOnError extends boolean = false>(options?: Options<GetOembedQueryData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetOembedQueryResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/oembed/query',\n            ...options\n        });\n    }\n    \n}\n\nexport class PackageService {\n    public static postPackageByNameRunMigration<ThrowOnError extends boolean = false>(options: Options<PostPackageByNameRunMigrationData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<unknown, PostPackageByNameRunMigrationError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/package/{name}/run-migration',\n            ...options\n        });\n    }\n    \n    public static getPackageConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetPackageConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetPackageConfigurationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/package/configuration',\n            ...options\n        });\n    }\n    \n    public static getPackageCreated<ThrowOnError extends boolean = false>(options?: Options<GetPackageCreatedData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetPackageCreatedResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/package/created',\n            ...options\n        });\n    }\n    \n    public static postPackageCreated<ThrowOnError extends boolean = false>(options?: Options<PostPackageCreatedData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostPackageCreatedError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/package/created',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deletePackageCreatedById<ThrowOnError extends boolean = false>(options: Options<DeletePackageCreatedByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeletePackageCreatedByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/package/created/{id}',\n            ...options\n        });\n    }\n    \n    public static getPackageCreatedById<ThrowOnError extends boolean = false>(options: Options<GetPackageCreatedByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetPackageCreatedByIdResponse, GetPackageCreatedByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/package/created/{id}',\n            ...options\n        });\n    }\n    \n    public static putPackageCreatedById<ThrowOnError extends boolean = false>(options: Options<PutPackageCreatedByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutPackageCreatedByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/package/created/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getPackageCreatedByIdDownload<ThrowOnError extends boolean = false>(options: Options<GetPackageCreatedByIdDownloadData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetPackageCreatedByIdDownloadResponse, GetPackageCreatedByIdDownloadError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/package/created/{id}/download',\n            ...options\n        });\n    }\n    \n    public static getPackageMigrationStatus<ThrowOnError extends boolean = false>(options?: Options<GetPackageMigrationStatusData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetPackageMigrationStatusResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/package/migration-status',\n            ...options\n        });\n    }\n    \n}\n\nexport class PartialViewService {\n    public static getItemPartialView<ThrowOnError extends boolean = false>(options?: Options<GetItemPartialViewData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemPartialViewResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/partial-view',\n            ...options\n        });\n    }\n    \n    public static postPartialView<ThrowOnError extends boolean = false>(options?: Options<PostPartialViewData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostPartialViewError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/partial-view',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deletePartialViewByPath<ThrowOnError extends boolean = false>(options: Options<DeletePartialViewByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeletePartialViewByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/partial-view/{path}',\n            ...options\n        });\n    }\n    \n    public static getPartialViewByPath<ThrowOnError extends boolean = false>(options: Options<GetPartialViewByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetPartialViewByPathResponse, GetPartialViewByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/partial-view/{path}',\n            ...options\n        });\n    }\n    \n    public static putPartialViewByPath<ThrowOnError extends boolean = false>(options: Options<PutPartialViewByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutPartialViewByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/partial-view/{path}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putPartialViewByPathRename<ThrowOnError extends boolean = false>(options: Options<PutPartialViewByPathRenameData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutPartialViewByPathRenameError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/partial-view/{path}/rename',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postPartialViewFolder<ThrowOnError extends boolean = false>(options?: Options<PostPartialViewFolderData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostPartialViewFolderError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/partial-view/folder',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deletePartialViewFolderByPath<ThrowOnError extends boolean = false>(options: Options<DeletePartialViewFolderByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeletePartialViewFolderByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/partial-view/folder/{path}',\n            ...options\n        });\n    }\n    \n    public static getPartialViewFolderByPath<ThrowOnError extends boolean = false>(options: Options<GetPartialViewFolderByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetPartialViewFolderByPathResponse, GetPartialViewFolderByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/partial-view/folder/{path}',\n            ...options\n        });\n    }\n    \n    public static getPartialViewSnippet<ThrowOnError extends boolean = false>(options?: Options<GetPartialViewSnippetData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetPartialViewSnippetResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/partial-view/snippet',\n            ...options\n        });\n    }\n    \n    public static getPartialViewSnippetById<ThrowOnError extends boolean = false>(options: Options<GetPartialViewSnippetByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetPartialViewSnippetByIdResponse, GetPartialViewSnippetByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/partial-view/snippet/{id}',\n            ...options\n        });\n    }\n    \n    public static getTreePartialViewAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreePartialViewAncestorsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreePartialViewAncestorsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/partial-view/ancestors',\n            ...options\n        });\n    }\n    \n    public static getTreePartialViewChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreePartialViewChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreePartialViewChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/partial-view/children',\n            ...options\n        });\n    }\n    \n    public static getTreePartialViewRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreePartialViewRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreePartialViewRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/partial-view/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class PreviewService {\n    public static deletePreview<ThrowOnError extends boolean = false>(options?: Options<DeletePreviewData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({\n            url: '/umbraco/management/api/v1/preview',\n            ...options\n        });\n    }\n    \n    public static postPreview<ThrowOnError extends boolean = false>(options?: Options<PostPreviewData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/preview',\n            ...options\n        });\n    }\n    \n}\n\nexport class ProfilingService {\n    public static getProfilingStatus<ThrowOnError extends boolean = false>(options?: Options<GetProfilingStatusData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetProfilingStatusResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/profiling/status',\n            ...options\n        });\n    }\n    \n    public static putProfilingStatus<ThrowOnError extends boolean = false>(options?: Options<PutProfilingStatusData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/profiling/status',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n}\n\nexport class PropertyTypeService {\n    public static getPropertyTypeIsUsed<ThrowOnError extends boolean = false>(options?: Options<GetPropertyTypeIsUsedData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetPropertyTypeIsUsedResponse, GetPropertyTypeIsUsedError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/property-type/is-used',\n            ...options\n        });\n    }\n    \n}\n\nexport class PublishedCacheService {\n    public static postPublishedCacheRebuild<ThrowOnError extends boolean = false>(options?: Options<PostPublishedCacheRebuildData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/published-cache/rebuild',\n            ...options\n        });\n    }\n    \n    public static getPublishedCacheRebuildStatus<ThrowOnError extends boolean = false>(options?: Options<GetPublishedCacheRebuildStatusData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetPublishedCacheRebuildStatusResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/published-cache/rebuild/status',\n            ...options\n        });\n    }\n    \n    public static postPublishedCacheReload<ThrowOnError extends boolean = false>(options?: Options<PostPublishedCacheReloadData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/published-cache/reload',\n            ...options\n        });\n    }\n    \n}\n\nexport class RedirectManagementService {\n    public static getRedirectManagement<ThrowOnError extends boolean = false>(options?: Options<GetRedirectManagementData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetRedirectManagementResponse, GetRedirectManagementError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/redirect-management',\n            ...options\n        });\n    }\n    \n    public static deleteRedirectManagementById<ThrowOnError extends boolean = false>(options: Options<DeleteRedirectManagementByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/redirect-management/{id}',\n            ...options\n        });\n    }\n    \n    public static getRedirectManagementById<ThrowOnError extends boolean = false>(options: Options<GetRedirectManagementByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetRedirectManagementByIdResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/redirect-management/{id}',\n            ...options\n        });\n    }\n    \n    public static getRedirectManagementStatus<ThrowOnError extends boolean = false>(options?: Options<GetRedirectManagementStatusData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetRedirectManagementStatusResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/redirect-management/status',\n            ...options\n        });\n    }\n    \n    public static postRedirectManagementStatus<ThrowOnError extends boolean = false>(options?: Options<PostRedirectManagementStatusData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/redirect-management/status',\n            ...options\n        });\n    }\n    \n}\n\nexport class RelationTypeService {\n    public static getItemRelationType<ThrowOnError extends boolean = false>(options?: Options<GetItemRelationTypeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemRelationTypeResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/relation-type',\n            ...options\n        });\n    }\n    \n    public static getRelationType<ThrowOnError extends boolean = false>(options?: Options<GetRelationTypeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetRelationTypeResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/relation-type',\n            ...options\n        });\n    }\n    \n    public static getRelationTypeById<ThrowOnError extends boolean = false>(options: Options<GetRelationTypeByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetRelationTypeByIdResponse, GetRelationTypeByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/relation-type/{id}',\n            ...options\n        });\n    }\n    \n}\n\nexport class RelationService {\n    public static getRelationByRelationTypeId<ThrowOnError extends boolean = false>(options: Options<GetRelationByRelationTypeIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetRelationByRelationTypeIdResponse, GetRelationByRelationTypeIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/relation/type/{id}',\n            ...options\n        });\n    }\n    \n}\n\nexport class ScriptService {\n    public static getItemScript<ThrowOnError extends boolean = false>(options?: Options<GetItemScriptData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemScriptResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/script',\n            ...options\n        });\n    }\n    \n    public static postScript<ThrowOnError extends boolean = false>(options?: Options<PostScriptData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostScriptError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/script',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteScriptByPath<ThrowOnError extends boolean = false>(options: Options<DeleteScriptByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteScriptByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/script/{path}',\n            ...options\n        });\n    }\n    \n    public static getScriptByPath<ThrowOnError extends boolean = false>(options: Options<GetScriptByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetScriptByPathResponse, GetScriptByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/script/{path}',\n            ...options\n        });\n    }\n    \n    public static putScriptByPath<ThrowOnError extends boolean = false>(options: Options<PutScriptByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutScriptByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/script/{path}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putScriptByPathRename<ThrowOnError extends boolean = false>(options: Options<PutScriptByPathRenameData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutScriptByPathRenameError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/script/{path}/rename',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postScriptFolder<ThrowOnError extends boolean = false>(options?: Options<PostScriptFolderData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostScriptFolderError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/script/folder',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteScriptFolderByPath<ThrowOnError extends boolean = false>(options: Options<DeleteScriptFolderByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteScriptFolderByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/script/folder/{path}',\n            ...options\n        });\n    }\n    \n    public static getScriptFolderByPath<ThrowOnError extends boolean = false>(options: Options<GetScriptFolderByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetScriptFolderByPathResponse, GetScriptFolderByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/script/folder/{path}',\n            ...options\n        });\n    }\n    \n    public static getTreeScriptAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeScriptAncestorsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeScriptAncestorsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/script/ancestors',\n            ...options\n        });\n    }\n    \n    public static getTreeScriptChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeScriptChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeScriptChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/script/children',\n            ...options\n        });\n    }\n    \n    public static getTreeScriptRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeScriptRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeScriptRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/script/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class SearcherService {\n    public static getSearcher<ThrowOnError extends boolean = false>(options?: Options<GetSearcherData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetSearcherResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/searcher',\n            ...options\n        });\n    }\n    \n    public static getSearcherBySearcherNameQuery<ThrowOnError extends boolean = false>(options: Options<GetSearcherBySearcherNameQueryData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetSearcherBySearcherNameQueryResponse, GetSearcherBySearcherNameQueryError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/searcher/{searcherName}/query',\n            ...options\n        });\n    }\n    \n}\n\nexport class SecurityService {\n    public static getSecurityConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetSecurityConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetSecurityConfigurationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/security/configuration',\n            ...options\n        });\n    }\n    \n    public static postSecurityForgotPassword<ThrowOnError extends boolean = false>(options?: Options<PostSecurityForgotPasswordData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostSecurityForgotPasswordError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/security/forgot-password',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postSecurityForgotPasswordReset<ThrowOnError extends boolean = false>(options?: Options<PostSecurityForgotPasswordResetData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<PostSecurityForgotPasswordResetResponse, PostSecurityForgotPasswordResetError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/security/forgot-password/reset',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postSecurityForgotPasswordVerify<ThrowOnError extends boolean = false>(options?: Options<PostSecurityForgotPasswordVerifyData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<PostSecurityForgotPasswordVerifyResponse, PostSecurityForgotPasswordVerifyError, ThrowOnError>({\n            url: '/umbraco/management/api/v1/security/forgot-password/verify',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n}\n\nexport class SegmentService {\n    public static getSegment<ThrowOnError extends boolean = false>(options?: Options<GetSegmentData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetSegmentResponse, GetSegmentError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/segment',\n            ...options\n        });\n    }\n    \n}\n\nexport class ServerService {\n    public static getServerConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetServerConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetServerConfigurationResponse, unknown, ThrowOnError>({\n            url: '/umbraco/management/api/v1/server/configuration',\n            ...options\n        });\n    }\n    \n    public static getServerInformation<ThrowOnError extends boolean = false>(options?: Options<GetServerInformationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetServerInformationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/server/information',\n            ...options\n        });\n    }\n    \n    public static getServerStatus<ThrowOnError extends boolean = false>(options?: Options<GetServerStatusData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetServerStatusResponse, GetServerStatusError, ThrowOnError>({\n            url: '/umbraco/management/api/v1/server/status',\n            ...options\n        });\n    }\n    \n    public static getServerTroubleshooting<ThrowOnError extends boolean = false>(options?: Options<GetServerTroubleshootingData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetServerTroubleshootingResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/server/troubleshooting',\n            ...options\n        });\n    }\n    \n    public static getServerUpgradeCheck<ThrowOnError extends boolean = false>(options?: Options<GetServerUpgradeCheckData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetServerUpgradeCheckResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/server/upgrade-check',\n            ...options\n        });\n    }\n    \n}\n\nexport class StaticFileService {\n    public static getItemStaticFile<ThrowOnError extends boolean = false>(options?: Options<GetItemStaticFileData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemStaticFileResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/static-file',\n            ...options\n        });\n    }\n    \n    public static getTreeStaticFileAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeStaticFileAncestorsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeStaticFileAncestorsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/static-file/ancestors',\n            ...options\n        });\n    }\n    \n    public static getTreeStaticFileChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeStaticFileChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeStaticFileChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/static-file/children',\n            ...options\n        });\n    }\n    \n    public static getTreeStaticFileRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeStaticFileRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeStaticFileRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/static-file/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class StylesheetService {\n    public static getItemStylesheet<ThrowOnError extends boolean = false>(options?: Options<GetItemStylesheetData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemStylesheetResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/stylesheet',\n            ...options\n        });\n    }\n    \n    public static postStylesheet<ThrowOnError extends boolean = false>(options?: Options<PostStylesheetData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostStylesheetError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/stylesheet',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteStylesheetByPath<ThrowOnError extends boolean = false>(options: Options<DeleteStylesheetByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteStylesheetByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/stylesheet/{path}',\n            ...options\n        });\n    }\n    \n    public static getStylesheetByPath<ThrowOnError extends boolean = false>(options: Options<GetStylesheetByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetStylesheetByPathResponse, GetStylesheetByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/stylesheet/{path}',\n            ...options\n        });\n    }\n    \n    public static putStylesheetByPath<ThrowOnError extends boolean = false>(options: Options<PutStylesheetByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutStylesheetByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/stylesheet/{path}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putStylesheetByPathRename<ThrowOnError extends boolean = false>(options: Options<PutStylesheetByPathRenameData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutStylesheetByPathRenameError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/stylesheet/{path}/rename',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postStylesheetFolder<ThrowOnError extends boolean = false>(options?: Options<PostStylesheetFolderData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostStylesheetFolderError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/stylesheet/folder',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteStylesheetFolderByPath<ThrowOnError extends boolean = false>(options: Options<DeleteStylesheetFolderByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteStylesheetFolderByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/stylesheet/folder/{path}',\n            ...options\n        });\n    }\n    \n    public static getStylesheetFolderByPath<ThrowOnError extends boolean = false>(options: Options<GetStylesheetFolderByPathData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetStylesheetFolderByPathResponse, GetStylesheetFolderByPathError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/stylesheet/folder/{path}',\n            ...options\n        });\n    }\n    \n    public static getTreeStylesheetAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeStylesheetAncestorsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeStylesheetAncestorsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/stylesheet/ancestors',\n            ...options\n        });\n    }\n    \n    public static getTreeStylesheetChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeStylesheetChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeStylesheetChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/stylesheet/children',\n            ...options\n        });\n    }\n    \n    public static getTreeStylesheetRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeStylesheetRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeStylesheetRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/stylesheet/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class TagService {\n    public static getTag<ThrowOnError extends boolean = false>(options?: Options<GetTagData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTagResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tag',\n            ...options\n        });\n    }\n    \n}\n\nexport class TelemetryService {\n    public static getTelemetry<ThrowOnError extends boolean = false>(options?: Options<GetTelemetryData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTelemetryResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/telemetry',\n            ...options\n        });\n    }\n    \n    public static getTelemetryLevel<ThrowOnError extends boolean = false>(options?: Options<GetTelemetryLevelData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTelemetryLevelResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/telemetry/level',\n            ...options\n        });\n    }\n    \n    public static postTelemetryLevel<ThrowOnError extends boolean = false>(options?: Options<PostTelemetryLevelData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostTelemetryLevelError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/telemetry/level',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n}\n\nexport class TemplateService {\n    public static getItemTemplate<ThrowOnError extends boolean = false>(options?: Options<GetItemTemplateData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemTemplateResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/template',\n            ...options\n        });\n    }\n    \n    public static getItemTemplateSearch<ThrowOnError extends boolean = false>(options?: Options<GetItemTemplateSearchData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemTemplateSearchResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/template/search',\n            ...options\n        });\n    }\n    \n    public static postTemplate<ThrowOnError extends boolean = false>(options?: Options<PostTemplateData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostTemplateError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/template',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteTemplateById<ThrowOnError extends boolean = false>(options: Options<DeleteTemplateByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteTemplateByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/template/{id}',\n            ...options\n        });\n    }\n    \n    public static getTemplateById<ThrowOnError extends boolean = false>(options: Options<GetTemplateByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetTemplateByIdResponse, GetTemplateByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/template/{id}',\n            ...options\n        });\n    }\n    \n    public static putTemplateById<ThrowOnError extends boolean = false>(options: Options<PutTemplateByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutTemplateByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/template/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getTemplateConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetTemplateConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTemplateConfigurationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/template/configuration',\n            ...options\n        });\n    }\n    \n    public static postTemplateQueryExecute<ThrowOnError extends boolean = false>(options?: Options<PostTemplateQueryExecuteData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<PostTemplateQueryExecuteResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/template/query/execute',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getTemplateQuerySettings<ThrowOnError extends boolean = false>(options?: Options<GetTemplateQuerySettingsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTemplateQuerySettingsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/template/query/settings',\n            ...options\n        });\n    }\n    \n    public static getTreeTemplateAncestors<ThrowOnError extends boolean = false>(options?: Options<GetTreeTemplateAncestorsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeTemplateAncestorsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/template/ancestors',\n            ...options\n        });\n    }\n    \n    public static getTreeTemplateChildren<ThrowOnError extends boolean = false>(options?: Options<GetTreeTemplateChildrenData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeTemplateChildrenResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/template/children',\n            ...options\n        });\n    }\n    \n    public static getTreeTemplateRoot<ThrowOnError extends boolean = false>(options?: Options<GetTreeTemplateRootData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTreeTemplateRootResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/tree/template/root',\n            ...options\n        });\n    }\n    \n}\n\nexport class TemporaryFileService {\n    public static postTemporaryFile<ThrowOnError extends boolean = false>(options?: Options<PostTemporaryFileData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostTemporaryFileError, ThrowOnError>({\n            ...formDataBodySerializer,\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/temporary-file',\n            ...options,\n            headers: {\n                'Content-Type': null,\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteTemporaryFileById<ThrowOnError extends boolean = false>(options: Options<DeleteTemporaryFileByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteTemporaryFileByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/temporary-file/{id}',\n            ...options\n        });\n    }\n    \n    public static getTemporaryFileById<ThrowOnError extends boolean = false>(options: Options<GetTemporaryFileByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetTemporaryFileByIdResponse, GetTemporaryFileByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/temporary-file/{id}',\n            ...options\n        });\n    }\n    \n    public static getTemporaryFileConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetTemporaryFileConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetTemporaryFileConfigurationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/temporary-file/configuration',\n            ...options\n        });\n    }\n    \n}\n\nexport class UpgradeService {\n    public static postUpgradeAuthorize<ThrowOnError extends boolean = false>(options?: Options<PostUpgradeAuthorizeData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostUpgradeAuthorizeError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/upgrade/authorize',\n            ...options\n        });\n    }\n    \n    public static getUpgradeSettings<ThrowOnError extends boolean = false>(options?: Options<GetUpgradeSettingsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetUpgradeSettingsResponse, GetUpgradeSettingsError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/upgrade/settings',\n            ...options\n        });\n    }\n    \n}\n\nexport class UserDataService {\n    public static getUserData<ThrowOnError extends boolean = false>(options?: Options<GetUserDataData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetUserDataResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user-data',\n            ...options\n        });\n    }\n    \n    public static postUserData<ThrowOnError extends boolean = false>(options?: Options<PostUserDataData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostUserDataError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user-data',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static putUserData<ThrowOnError extends boolean = false>(options?: Options<PutUserDataData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).put<unknown, PutUserDataError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user-data',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getUserDataById<ThrowOnError extends boolean = false>(options: Options<GetUserDataByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetUserDataByIdResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user-data/{id}',\n            ...options\n        });\n    }\n    \n}\n\nexport class UserGroupService {\n    public static getFilterUserGroup<ThrowOnError extends boolean = false>(options?: Options<GetFilterUserGroupData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetFilterUserGroupResponse, GetFilterUserGroupError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/filter/user-group',\n            ...options\n        });\n    }\n    \n    public static getItemUserGroup<ThrowOnError extends boolean = false>(options?: Options<GetItemUserGroupData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemUserGroupResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/user-group',\n            ...options\n        });\n    }\n    \n    public static deleteUserGroup<ThrowOnError extends boolean = false>(options?: Options<DeleteUserGroupData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).delete<unknown, DeleteUserGroupError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user-group',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getUserGroup<ThrowOnError extends boolean = false>(options?: Options<GetUserGroupData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetUserGroupResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user-group',\n            ...options\n        });\n    }\n    \n    public static postUserGroup<ThrowOnError extends boolean = false>(options?: Options<PostUserGroupData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostUserGroupError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user-group',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteUserGroupById<ThrowOnError extends boolean = false>(options: Options<DeleteUserGroupByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteUserGroupByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user-group/{id}',\n            ...options\n        });\n    }\n    \n    public static getUserGroupById<ThrowOnError extends boolean = false>(options: Options<GetUserGroupByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetUserGroupByIdResponse, GetUserGroupByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user-group/{id}',\n            ...options\n        });\n    }\n    \n    public static putUserGroupById<ThrowOnError extends boolean = false>(options: Options<PutUserGroupByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutUserGroupByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user-group/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteUserGroupByIdUsers<ThrowOnError extends boolean = false>(options: Options<DeleteUserGroupByIdUsersData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteUserGroupByIdUsersError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user-group/{id}/users',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postUserGroupByIdUsers<ThrowOnError extends boolean = false>(options: Options<PostUserGroupByIdUsersData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<unknown, PostUserGroupByIdUsersError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user-group/{id}/users',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n}\n\nexport class UserService {\n    public static getFilterUser<ThrowOnError extends boolean = false>(options?: Options<GetFilterUserData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetFilterUserResponse, GetFilterUserError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/filter/user',\n            ...options\n        });\n    }\n    \n    public static getItemUser<ThrowOnError extends boolean = false>(options?: Options<GetItemUserData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemUserResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/user',\n            ...options\n        });\n    }\n    \n    public static deleteUser<ThrowOnError extends boolean = false>(options?: Options<DeleteUserData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).delete<unknown, DeleteUserError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getUser<ThrowOnError extends boolean = false>(options?: Options<GetUserData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetUserResponse, GetUserError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user',\n            ...options\n        });\n    }\n    \n    public static postUser<ThrowOnError extends boolean = false>(options?: Options<PostUserData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostUserError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteUserById<ThrowOnError extends boolean = false>(options: Options<DeleteUserByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteUserByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/{id}',\n            ...options\n        });\n    }\n    \n    public static getUserById<ThrowOnError extends boolean = false>(options: Options<GetUserByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetUserByIdResponse, GetUserByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/{id}',\n            ...options\n        });\n    }\n    \n    public static putUserById<ThrowOnError extends boolean = false>(options: Options<PutUserByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutUserByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getUserById2Fa<ThrowOnError extends boolean = false>(options: Options<GetUserById2FaData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetUserById2FaResponse, GetUserById2FaError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/{id}/2fa',\n            ...options\n        });\n    }\n    \n    public static deleteUserById2FaByProviderName<ThrowOnError extends boolean = false>(options: Options<DeleteUserById2FaByProviderNameData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteUserById2FaByProviderNameError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/{id}/2fa/{providerName}',\n            ...options\n        });\n    }\n    \n    public static getUserByIdCalculateStartNodes<ThrowOnError extends boolean = false>(options: Options<GetUserByIdCalculateStartNodesData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetUserByIdCalculateStartNodesResponse, GetUserByIdCalculateStartNodesError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/{id}/calculate-start-nodes',\n            ...options\n        });\n    }\n    \n    public static postUserByIdChangePassword<ThrowOnError extends boolean = false>(options: Options<PostUserByIdChangePasswordData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<unknown, PostUserByIdChangePasswordError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/{id}/change-password',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getUserByIdClientCredentials<ThrowOnError extends boolean = false>(options: Options<GetUserByIdClientCredentialsData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetUserByIdClientCredentialsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/{id}/client-credentials',\n            ...options\n        });\n    }\n    \n    public static postUserByIdClientCredentials<ThrowOnError extends boolean = false>(options: Options<PostUserByIdClientCredentialsData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<unknown, PostUserByIdClientCredentialsError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/{id}/client-credentials',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteUserByIdClientCredentialsByClientId<ThrowOnError extends boolean = false>(options: Options<DeleteUserByIdClientCredentialsByClientIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteUserByIdClientCredentialsByClientIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/{id}/client-credentials/{clientId}',\n            ...options\n        });\n    }\n    \n    public static postUserByIdResetPassword<ThrowOnError extends boolean = false>(options: Options<PostUserByIdResetPasswordData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<PostUserByIdResetPasswordResponse, PostUserByIdResetPasswordError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/{id}/reset-password',\n            ...options\n        });\n    }\n    \n    public static deleteUserAvatarById<ThrowOnError extends boolean = false>(options: Options<DeleteUserAvatarByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteUserAvatarByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/avatar/{id}',\n            ...options\n        });\n    }\n    \n    public static postUserAvatarById<ThrowOnError extends boolean = false>(options: Options<PostUserAvatarByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<unknown, PostUserAvatarByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/avatar/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getUserConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetUserConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetUserConfigurationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/configuration',\n            ...options\n        });\n    }\n    \n    public static getUserCurrent<ThrowOnError extends boolean = false>(options?: Options<GetUserCurrentData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetUserCurrentResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/current',\n            ...options\n        });\n    }\n    \n    public static getUserCurrent2Fa<ThrowOnError extends boolean = false>(options?: Options<GetUserCurrent2FaData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetUserCurrent2FaResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/current/2fa',\n            ...options\n        });\n    }\n    \n    public static deleteUserCurrent2FaByProviderName<ThrowOnError extends boolean = false>(options: Options<DeleteUserCurrent2FaByProviderNameData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteUserCurrent2FaByProviderNameError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/current/2fa/{providerName}',\n            ...options\n        });\n    }\n    \n    public static getUserCurrent2FaByProviderName<ThrowOnError extends boolean = false>(options: Options<GetUserCurrent2FaByProviderNameData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetUserCurrent2FaByProviderNameResponse, GetUserCurrent2FaByProviderNameError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/current/2fa/{providerName}',\n            ...options\n        });\n    }\n    \n    public static postUserCurrent2FaByProviderName<ThrowOnError extends boolean = false>(options: Options<PostUserCurrent2FaByProviderNameData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).post<PostUserCurrent2FaByProviderNameResponse, PostUserCurrent2FaByProviderNameError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/current/2fa/{providerName}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postUserCurrentAvatar<ThrowOnError extends boolean = false>(options?: Options<PostUserCurrentAvatarData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostUserCurrentAvatarError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/current/avatar',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postUserCurrentChangePassword<ThrowOnError extends boolean = false>(options?: Options<PostUserCurrentChangePasswordData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostUserCurrentChangePasswordError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/current/change-password',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getUserCurrentConfiguration<ThrowOnError extends boolean = false>(options?: Options<GetUserCurrentConfigurationData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetUserCurrentConfigurationResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/current/configuration',\n            ...options\n        });\n    }\n    \n    public static getUserCurrentLoginProviders<ThrowOnError extends boolean = false>(options?: Options<GetUserCurrentLoginProvidersData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetUserCurrentLoginProvidersResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/current/login-providers',\n            ...options\n        });\n    }\n    \n    public static getUserCurrentPermissions<ThrowOnError extends boolean = false>(options?: Options<GetUserCurrentPermissionsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetUserCurrentPermissionsResponse, GetUserCurrentPermissionsError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/current/permissions',\n            ...options\n        });\n    }\n    \n    public static getUserCurrentPermissionsDocument<ThrowOnError extends boolean = false>(options?: Options<GetUserCurrentPermissionsDocumentData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetUserCurrentPermissionsDocumentResponse, GetUserCurrentPermissionsDocumentError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/current/permissions/document',\n            ...options\n        });\n    }\n    \n    public static getUserCurrentPermissionsMedia<ThrowOnError extends boolean = false>(options?: Options<GetUserCurrentPermissionsMediaData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetUserCurrentPermissionsMediaResponse, GetUserCurrentPermissionsMediaError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/current/permissions/media',\n            ...options\n        });\n    }\n    \n    public static postUserDisable<ThrowOnError extends boolean = false>(options?: Options<PostUserDisableData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostUserDisableError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/disable',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postUserEnable<ThrowOnError extends boolean = false>(options?: Options<PostUserEnableData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostUserEnableError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/enable',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postUserInvite<ThrowOnError extends boolean = false>(options?: Options<PostUserInviteData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostUserInviteError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/invite',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postUserInviteCreatePassword<ThrowOnError extends boolean = false>(options?: Options<PostUserInviteCreatePasswordData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostUserInviteCreatePasswordError, ThrowOnError>({\n            url: '/umbraco/management/api/v1/user/invite/create-password',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postUserInviteResend<ThrowOnError extends boolean = false>(options?: Options<PostUserInviteResendData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostUserInviteResendError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/invite/resend',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postUserInviteVerify<ThrowOnError extends boolean = false>(options?: Options<PostUserInviteVerifyData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<PostUserInviteVerifyResponse, PostUserInviteVerifyError, ThrowOnError>({\n            url: '/umbraco/management/api/v1/user/invite/verify',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postUserSetUserGroups<ThrowOnError extends boolean = false>(options?: Options<PostUserSetUserGroupsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/set-user-groups',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static postUserUnlock<ThrowOnError extends boolean = false>(options?: Options<PostUserUnlockData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostUserUnlockError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/user/unlock',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n}\n\nexport class WebhookService {\n    public static getItemWebhook<ThrowOnError extends boolean = false>(options?: Options<GetItemWebhookData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetItemWebhookResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/item/webhook',\n            ...options\n        });\n    }\n    \n    public static getWebhook<ThrowOnError extends boolean = false>(options?: Options<GetWebhookData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetWebhookResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/webhook',\n            ...options\n        });\n    }\n    \n    public static postWebhook<ThrowOnError extends boolean = false>(options?: Options<PostWebhookData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).post<unknown, PostWebhookError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/webhook',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static deleteWebhookById<ThrowOnError extends boolean = false>(options: Options<DeleteWebhookByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).delete<unknown, DeleteWebhookByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/webhook/{id}',\n            ...options\n        });\n    }\n    \n    public static getWebhookById<ThrowOnError extends boolean = false>(options: Options<GetWebhookByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetWebhookByIdResponse, GetWebhookByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/webhook/{id}',\n            ...options\n        });\n    }\n    \n    public static putWebhookById<ThrowOnError extends boolean = false>(options: Options<PutWebhookByIdData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).put<unknown, PutWebhookByIdError, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/webhook/{id}',\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options?.headers\n            }\n        });\n    }\n    \n    public static getWebhookByIdLogs<ThrowOnError extends boolean = false>(options: Options<GetWebhookByIdLogsData, ThrowOnError>) {\n        return (options.client ?? _heyApiClient).get<GetWebhookByIdLogsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/webhook/{id}/logs',\n            ...options\n        });\n    }\n    \n    public static getWebhookEvents<ThrowOnError extends boolean = false>(options?: Options<GetWebhookEventsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetWebhookEventsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/webhook/events',\n            ...options\n        });\n    }\n    \n    public static getWebhookLogs<ThrowOnError extends boolean = false>(options?: Options<GetWebhookLogsData, ThrowOnError>) {\n        return (options?.client ?? _heyApiClient).get<GetWebhookLogsResponse, unknown, ThrowOnError>({\n            security: [\n                {\n                    scheme: 'bearer',\n                    type: 'http'\n                }\n            ],\n            url: '/umbraco/management/api/v1/webhook/logs',\n            ...options\n        });\n    }\n    \n}","import {UmbContextBase} from '@umbraco-cms/backoffice/class-api';\nimport {UmbContextToken} from \"@umbraco-cms/backoffice/context-api\";\nimport {UmbBasicState} from \"@umbraco-cms/backoffice/observable-api\";\nimport {RootDomains} from \"../types/types.ts\";\nimport {DocumentService} from \"../management-api\";\nimport {UmbControllerHost} from \"@umbraco-cms/backoffice/controller-api\";\nimport {client} from \"../impersonation-api/client.gen.ts\";\n\n\nexport class RootContext extends UmbContextBase<RootContext> {\n  token: () => Promise<string>\n  #rootItems = new UmbBasicState({} as RootDomains[]);\n  readonly rootItems = this.#rootItems.asObservable();\n\n  constructor(host: UmbControllerHost) {\n    super(host, ROOT_CONTEXT);\n    const config = client.getConfig();\n    this.token = config.auth as () => Promise<string>\n    this.fetch();\n  }\n\n  async fetch() {\n    const rootItems = await this.fetchRoot();\n    for (const item of rootItems) {\n      item.domains = await this.fetchDomains(item.id);\n    }\n    this.#rootItems.setValue(rootItems);\n  }\n\n  private async fetchDomains(rootId: string) {\n    const {response, data, error} = await DocumentService.getDocumentByIdDomains({\n      path: {\n        id: rootId\n      },\n      headers: {\n        Authorization: 'Bearer ' + await this.token()\n      }\n    });\n\n    if (response.ok) {\n      if (data?.domains) {\n        return data\n      }\n    } else {\n      console.error('There was a problem with the fetch operation:', error);\n    }\n  }\n\n  private async fetchRoot(): Promise<RootDomains[]> {\n    const {response, data, error} = await DocumentService.getTreeDocumentRoot({\n      headers: {\n        Authorization: 'Bearer ' + await this.token()\n      }\n    });\n\n    if (response.ok) {\n      if (data?.total && data.total > 0) {\n        return data.items\n      }\n    } else {\n      console.error('There was a problem with the fetch operation:', error);\n    }\n\n    return [];\n  }\n}\n\nexport const ROOT_CONTEXT = new UmbContextToken<RootContext>(\n  \"UmbWorkspaceContext\",\n  'RootContext',\n);\n\n","import {RootContext} from \"./root-context.ts\";\nimport {AccessToSensitiveDataCondition, MemberSectionCondition} from \"../constants/member-section-condition.ts\";\n\nconst context: UmbExtensionManifest = {\n  type: 'workspaceContext',\n  alias: 'Root.Context',\n  name: 'Root Context',\n  api: RootContext,\n  conditions: [\n    MemberSectionCondition,\n    AccessToSensitiveDataCondition\n  ]\n}\n\nexport const manifests = [context];\n","import {\n  UmbConditionConfigBase,\n  UmbConditionControllerArguments,\n  UmbExtensionCondition\n} from '@umbraco-cms/backoffice/extension-api';\nimport {UmbConditionBase} from '@umbraco-cms/backoffice/extension-registry';\nimport {UmbControllerHost} from '@umbraco-cms/backoffice/controller-api';\nimport {UMB_CURRENT_USER_CONTEXT} from \"@umbraco-cms/backoffice/current-user\";\n\nexport type SensitiveDataConfig = UmbConditionConfigBase<'Umb.Condition.CurrentUser.HasAccessToSensitiveData'> & {\n  match?: string;\n};\n\nexport class SensitiveDataCondition extends UmbConditionBase<SensitiveDataConfig> implements UmbExtensionCondition {\n  constructor(host: UmbControllerHost, args: UmbConditionControllerArguments<SensitiveDataConfig>) {\n    super(host, args);\n\n    this.consumeContext(UMB_CURRENT_USER_CONTEXT, (collectionContext) => {\n      const hasAccessToSensitiveData = collectionContext?.getHasAccessToSensitiveData()\n      if (hasAccessToSensitiveData) {\n        this.permitted = true;\n        args.onChange();\n      }\n    });\n  }\n}\n\n// Declare the Condition Configuration Type in the global UmbExtensionConditionConfigMap interface:\ndeclare global {\n  interface UmbExtensionConditionConfigMap {\n    SensitiveDataConfig: SensitiveDataConfig;\n  }\n}\n","import {SensitiveDataCondition} from \"./sensitiveData-condition.ts\";\n\nconst context: UmbExtensionManifest = {\n  type: 'condition',\n  name: 'Sensitive Data Condition',\n  alias: 'Umb.Condition.CurrentUser.HasAccessToSensitiveData',\n  api: SensitiveDataCondition,\n};\n\nexport const manifests = [context];\n","import {manifests as entrypoints} from \"./entrypoints/manifest.js\";\r\nimport {manifests as modals} from \"./modals/manifest.js\";\r\nimport {manifests as entityActions} from \"./entityactions/manifest.js\";\r\nimport {manifests as contexts} from \"./context/manifest.js\";\r\nimport {manifests as conditions} from \"./conditions/manifest.js\";\r\n\r\n// Job of the bundle is to collate all the manifests from different parts of the extension and load other manifests\r\n// We load this bundle from umbraco-package.json\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n  ...modals,\r\n  ...entityActions,\r\n  ...contexts,\r\n  ...entrypoints,\r\n  ...conditions\r\n];\r\n"],"names":["context","manifests","modals","MEMBER_IMPERSONATION_MODAL","UmbModalToken","j","t","r","e","R","U","_","D","O","i","a","n","l","o","s","y","q","f","p","H","B","A","P","_a","E","S","W","x","C","h","__publicField","v","N","Q","w","J","c","T","u","m","b","d","client","createClient","createConfig","ImpersonationService","options","_heyApiClient","ImpersonateMember","UmbEntityActionBase","host","args","__privateAdd","_modalManagerContext","UMB_MODAL_MANAGER_CONTEXT","instance","__privateSet","modal","__privateGet","data","response","MemberSectionCondition","AccessToSensitiveDataCondition","entityAction","UMB_MEMBER_ENTITY_TYPE","DocumentService","RootContext","UmbContextBase","ROOT_CONTEXT","_rootItems","UmbBasicState","config","rootItems","item","rootId","error","UmbContextToken","SensitiveDataCondition","UmbConditionBase","UMB_CURRENT_USER_CONTEXT","collectionContext","entityActions","contexts","entrypoints","conditions"],"mappings":"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","x_google_ignoreList":[3]}